{
  "hash": "36b20c9b56a7d6c96cf93dd81394360b",
  "result": {
    "markdown": "---\ntitle: \"Ecological analyses of bacterial dataset\"\nformat:\n  html:\n    toc: true\nexecute:\n  eval: false\neditor_options: \n  chunk_output_type: console\n---\n\n\nFirstly, we have to install and load many packages needed to analyze our bacterial data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"ANCOMBC\")\nBiocManager::install(\"phyloseq\")\nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"microbiome\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"tidyverse\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"GUniFrac\")\ninstall.packages(\"phangorn\")\ninstall.packages(\"vegan\")\ninstall.packages(\"gdata\")\ninstall.packages(\"purrr\")\ninstall.packages(\"devtools\")\ninstall.packages(\"rstatix\")\ninstall.packages(\"ggstasplot\")\ninstall.packages(\"DescTools\")\ninstall.packages(\"tibble\")\ninstall.packages(\"WRS2\")\ninstall.packages(\"tibble\")\ninstall.packages(\"ARTool\")\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"edgeR\")\nremotes::install_github(\"wilkelab/ggtext\") \ninstall_github(\"pmartinezarbizu/pairwiseAdonis/pairwiseAdonis\")\ninstall_github(\"nuriamw/micro4all\")\n\nlibrary(ANCOMBC)\nlibrary(phyloseq)\nlibrary(microbiome)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(GUniFrac)\nlibrary(vegan)\nlibrary(gdata)\nlibrary(purrr)\nlibrary(devtools)\nlibrary(rstatix)\nlibrary(ggstatsplot)\nlibrary(DescTools)\nlibrary(tibble)\nlibrary(WRS2)\nlibrary(ARTool)\nlibrary(edgeR)\nlibrary(pairwiseAdonis)\nlibrary(micro4all)\n```\n:::\n\n\nOur analyses will be based on phyloseq objects. That is to say, we are going to use [phyloseq](http://dx.plos.org/10.1371/journal.pone.0061217 \"Paper describing phyloseq package\") package.\n\n# 1. Create a phyloseq object\n\nphyloseq objects are very useful since they harbor several elements of interest: an ASV (or OTU) table in which the absolute abundance of each ASV is registered, the taxonomy of each ASV (from Domain or Kingdom to ASV level), a metadata table in which a full description of each sample is given, and finally, a phylogenetic tree at ASV level. Thus, let's load all the input files and create the phyloseq object. So, all the above mentioned files should be in our working directory.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata=read.table(\"ASV_Bacterias_final.txt\", header = T, sep=\"\\t\")#load the ASV table \ncolnames_data=colnames(data)\n\nmt=read.table(\"metadata_bacteria.txt\",sep=\"\\t\", header=T)#load the metadata table\nmt$Year=gsub(\"2022\", \"A\", mt$Year)#we replaced the number of the years by a character\nmt$Year=gsub(\"2023\", \"B\", mt$Year)\nmt$Replicate=as.character(mt$Replicate)#convert into characters\nmt$Fusion=paste0(mt$Year, sep=\"_\",mt$Plot, sep=\"_\", mt$Condition,sep=\"_\", mt$Compartment)#here we create a joined artificial variable in order to plot better our samples\nmt$Condition_Year=paste0(mt$Condition,sep=\"_\", mt$Year)#the same strategy\nrow.names(mt)=mt$Sample #the rownames of the metadata table should be identical to the name of the samples\n```\n:::\n\n\n::: collout-important\nThe order of the sample is very important! In particular, the order of the samples in the metadata file must be the same as the order of the samples in the ASV table. So, check (and correct it) previously.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntax =data[,2:8]#indicate the taxonomy of each ASV: from Domain/Kingdom to ASV level\nASV=data[,9:ncol(data)]#indicate the ASV counts\n\ndna=Biostrings::DNAStringSet(data$ASV_seqs) #save the sequence of each ASV into a variable\nnames(dna)= data$ASV_names\n\nrow.names(tax)=data$ASV_names#the name of each row should be the name of each ASV (i.e., \"ASV02156\")\nrow.names(ASV)=data$ASV_names\n\nidentical(rownames(ASV), rownames(tax))#this is very important and should give \"TRUE\". Otherwise, review the lines above because there is a mistaker elsewhere\n\nphy_tree=phyloseq::read_tree(\"tree\")#read the phylogenetic tree. In our case is named \"tree\"\nunrooted_tree = phy_tree\nape::is.rooted(unrooted_tree)#if your phylogenetic tree is unrooted, it will give you \"FALSE\", and in that case, we have uproopt it as following\ntree_root = ape::root(unrooted_tree, 1, resolve.root = T)#calculate the root\ntree_root#it gives you the number of tips and nodes\nape::is.rooted(tree_root)#check that the tree now is uprooted\n\n#Convert each element into suitable objects for the construction of a phyloseq object\nphy_OTUtable=otu_table(ASV, taxa_are_rows = T)\nphy_taxonomy=tax_table(as.matrix(tax))\nphy_metadata=sample_data(mt) \n#the tree is already in the proper format\n\nphy_data_total=phyloseq(phy_OTUtable,phy_taxonomy,phy_metadata,tree_root)#bind all the elements into the phyloseq object\nnsamples(phy_OTUtable); sum(sample_names(phy_metadata) %in% sample_names(phy_OTUtable)); nsamples(phy_metadata)#check all the elements have the same number of samples\n```\n:::\n\n\n# 2. Data curation\n\nThe phyloseq object is already created, however, we still have to check the quality of the data. For instance, we have to check if all the samples are comprised by enough sequences, and if the sampling and sequencing efforts are enough. For that purpose, we have to check the number of total sequences.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumsec=as.data.frame(colSums(otu_table(phy_data_total)))\nView(numsec) #order the table in ascending order to check the lowest library size (the sample with the lowest number of sequences)\n```\n:::\n\n\nWe found that sample **A2M05R** had low number of sequences (8730), so let's remove it from further analyses:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphy_data_total=subset_samples(phy_data_total,Sample != \"A1S04E\") #!= indicates \"not equal to\", so it means \"select all the Samples different to the one we want to remove\"\n```\n:::\n\n\nNow, it would be interesting to check the quality of the sterilization process. We want to visualize in an ordination plot if rhizosphere and root endosphere samples are separated in the multivariate space. As indicated in the **step 5**, we have to normalize the ASV counts and then, calculate the ordination of the samples and plot them into a multivariate ordination plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntodas_ASV=as.data.frame(otu_table(phy_data_total,taxa_are_rows = T))#obtain the ASV table from the phyloseq object\ntodas_mt=as.data.frame(sample_data(phy_data_total))#obtain the metadata table from the phyloseq object\ntodas_tax=as.data.frame(tax_table(phy_data_total))#obtain the taxonomy table from the phyloseq object\ntodas_tree=phy_tree(phy_data_total)#obtain the phylogenetic tree from the phyloseq object\n\n#all the previous steps are required to create a new object suitable for edgeR functions\n\ntodas_edgeR = DGEList(counts = todas_ASV, samples = todas_mt, genes = todas_tax)#Create a DGEList object need for the TMM normalization\ntodas_edgeR = calcNormFactors(todas_edgeR)#calculate all the normalization factor so that we can correct potential biases associated to the different librazy sizes (different number of sequences per sample)\ntodas_ASV_norm = cpm(todas_edgeR, normalized.lib.sizes=T, log=F)#extracting the normalized abundance\ntodas_phy_OTU_norm=otu_table(as.data.frame(todas_ASV_norm,row.names=F),taxa_are_rows = T)#create the normalized phyloseq elements\ntodas_phy_taxonomy_norm=tax_table(as.matrix(todas_tax))\ntodas_phy_metadata_norm=sample_data(todas_mt)\ntaxa_names(todas_phy_OTU_norm)= taxa_names(todas_phy_taxonomy_norm)#add the name of the taxa\nidentical(rownames(todas_ASV_norm), rownames(todas_tax))#if everything is well calculated, it should give \"TRUE\"\n\ntodas_normalized_phyloseq<-phyloseq(todas_phy_OTU_norm,\n                                    todas_phy_taxonomy_norm,\n                                    todas_phy_metadata_norm,\n                                    todas_tree)#Create the new phyloseq object, in which the abundance of all the taxa is normalized\n```\n:::\n\n\nOne the normalization is done, the plot is made as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPCOA_wuni= ordinate(todas_normalized_phyloseq, \"PCoA\", \"wunifrac\")#here we create the ordination plot (PCoA) based on Weighted UniFrac distances\npeso=PCOA_wuni$values$Relative_eig[1:2]#save the percentage of the variance explained by each axis into a new variable\npeso#check the variance explained\n\np= plot_ordination(todas_normalized_phyloseq, PCOA_wuni,type= \"samples\", color= \"Fusion\",shape = \"Year\")+#indicate the variable of interest (i.e., if you want to color by \"Plot\", indicate \"color=Plot\")\ngeom_point(alpha = 4, size = 4.5)+\nlabs(x=paste0(\"Axis 1 (\",round(peso[1]*100,digits = 2),\"%)\"), \n          y=paste0(\"Axis 2 (\",round(peso[2]*100,digits = 2),\"%)\"))+\ngeom_text(aes(label=Sample, fontface=\"bold\"), hjust=0.15, vjust=0.15, nudge_y = 0.0075,size=4, show.legend =F) +\nscale_shape_manual(values=c(\"2022\"=16, \"2023\"=17))+#the codes of the specific shapes\ntheme_bw()+\ntheme(legend.position = \"none\",\n          axis.text = element_text(size=18),\n          axis.title = element_text(size = 20),\n          plot.title = element_text(hjust=0.5, face=\"bold\",size=18),\n          legend.text = element_text(size = 18))+\n  geom_hline(aes(yintercept = c(0.00)), lty=2, colour=\"grey\")+\n  geom_vline(aes(xintercept = c(0.00)), lty=2, colour=\"grey\")+\nggtitle(\"All the samples\\nPCoA on Weighted UniFrac dissimilarities\")\n\nx11()\np\n```\n:::\n\n\n![Figure1. PCoA based on Weighted UniFrac including all the rhizosphere and root endosphere samples](images/PCoA_todas.jpg){fig-align=\"center\"}\n\nAs shown in Figure 1, there are some root endosphere samples that are closer than rhizosphere samples than other root endosphere samples. Thus, we consider that these roots were not properly sterilized. We should remove them because we are not aware of their origin\n\nThis, we have to curate our dataset, and remove all these samples:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphy_total=subset_samples(phy_data_total, \n                         Sample != \"A1S04E\"  & \n                           Sample!= \"A1M01E\"&\n                           Sample != \"A2S09E\" & Sample != \"A2S12E\"& Sample != \"A2S08E\" & Sample!=\"A2S01E\"&\n                           Sample !=\"B1S03E\"& Sample != \"B1S06E\"& Sample!=\"B1S09E\"& Sample!=\"B1S10E\"&\n                           Sample !=\"B1M12E\"&\n                           Sample != \"B2S06E\" & Sample !=\"B2S11E\" & Sample !=\"B2S07E\" & Sample !=\"B2S02E\" &\n                           Sample !=\"B2M08E\" & Sample !=\"B2M03E\")\nnumsec_pruned=as.data.frame(colSums(otu_table(phy_total)))\nnumASV_pruned=as.data.frame((otu_table(phy_total)))\n\nwrite.table(data.frame(\" \"=rownames(numsec_pruned),numsec_pruned),file=\"Numero_secuencias_deTrabajo.txt\", sep=\"\\t\",row.names =F)#save the table with the number of total sequences per sample\nwrite.table(data.frame(\" \"=rownames(numASV_pruned),numASV_pruned),file=\"Numero_ASVs_deTrabajo.txt\", sep=\"\\t\",row.names =F)#save the table with the number of total ASVs\n```\n:::\n\n\n# 3. Rarefaction curves\n\nWe still have to check whether the sequencing effort has been enough, so let's have a look at rarefaction curves. They are the best way to visualize the quality of the sequencing and sampling.\n\nIn our case, we should visualize the rarefaction curves by plant compartment, to check whether the data curation was made well\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin(sample_sums(phy_total))#calculate the smallest library size\ncolSums(otu_table(phy_total))[which.min(colSums(otu_table(phy_total)))]#check which is the sample with the smallest library size \nmt=as.data.frame(sample_data(phy_total))[order(as.character(rownames(as.data.frame(sample_data(phy_total)))),decreasing=F),]#obtain the metadata table\notu = as.data.frame(t(otu_table(phy_total)))#obtain the ASV table and traspose it\notu=otu[order(as.character(rownames(otu)),decreasing=FALSE),]\n\nrownames(otu)==rownames(mt)\nrownames(otu)=paste0(rownames(otu),\"/\",mt$Compartment)\nsample_names = rownames(otu)#we are creating a new column so that then we can plot based on the plant compartment (or based on other variable)\n\nout = rarecurve(otu, step = 100, label = F) #calculate the rarefaction\nrare = lapply(out, function(x){  \n  b = as.data.frame(x)\n  b = data.frame(ASV = b[,1], raw.read = rownames(b))\n  b$raw.read = as.numeric(gsub(\"N\", \"\",  b$raw.read))\n  return(b)\n})#this function is to create a table from the rarefaction variable\n\nnames(rare) = sample_names\nrare = map_dfr(rare, function(x){\n  z = data.frame(x)\n  return(z)\n}, .id = \"Sample\")\n\nrare$Compartment=rare$Sample #these lines aimed at creating a new column in which the information needed for the plotting is included. You should include here the factor that determines the color of the curves\nrare$Compartment=gsub(\".*/\", \"\", rare$Compartment)#replace all the text before \"/\"\nrare$raw.read=as.numeric(rare$raw.read)\n\n#Plotting\np_endo_rizo=ggplot(rare, aes(x=raw.read, y=ASV, colour=Compartment, group=Sample)) +\n  theme_bw()+\n  geom_point(aes(colour=Compartment), size=0.85)+\n  geom_line(aes(colour=Compartment),size=1.2)+\n  geom_vline(aes(xintercept = min(sample_sums(phy_total))), \n             lty=1, colour=\"black\")+\n  scale_fill_manual(values = c(\"Endosphere\"=\"black\",\"Rhizosphere\"=\"#66CC33\"))+\n  scale_color_manual(values = c(\"Endosphere\"=\"black\", \"Rhizosphere\"=\"#66CC33\"),\n                     name=\"Compartment\",\n                     breaks=c(\"Endosphere\", \"Rhizosphere\"),\n                     labels=c(\"Endosphere\", \"Rhizosphere\"))+\n  labs(title= \"All the samples\", x=\"Number of sequences\", y=\"Number of ASV\")+\n  guides(alpha=FALSE)+\n  theme(legend.key=element_blank(),\n        legend.title.align = 0.85,\n        legend.title = element_text(face=\"bold\",size=14),\n        axis.text = element_text(size=14),\n        axis.title = element_text(size = 16),\n        plot.title = element_text(hjust=0.5, face=\"bold\", size=16),\n        legend.text = element_text(size = 16))\nx11()\np_endo_rizo\n```\n:::\n\n\nNow yes, we will create rarefaction curves. But we have to split the data according to the orchards, otherwise it will be really difficult to understand the graphs. So, let's subset the data according to our experimental design. We will create new phyloseq objects: two per plant compartment, corresponding to each orchard or plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrizo1=subset_samples(phy_total, Compartment==\"Rhizosphere\" & Plot==\"Plot1\")\nrizo1=prune_taxa(taxa_sums(rizo1)>0.0, rizo1)#\n\nrizo2=subset_samples(phy_total, Compartment==\"Rhizosphere\" & Plot== \"Plot2\")\nrizo2=prune_taxa(taxa_sums(rizo2)>0.0, rizo2)\n\nendo1=subset_samples(phy_total, Compartment==\"Endosphere\" & Plot==\"Plot1\")\nendo1=prune_taxa(taxa_sums(endo1)>0.0, endo1)\n\nendo2=subset_samples(phy_total, Compartment==\"Endosphere\" & Plot== \"Plot2\")\nendo2=prune_taxa(taxa_sums(endo2)>0.0, endo2)\n```\n:::\n\n\nNow, calculate and plot the rarefaction curves:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin(sample_sums(rizo1))\ncolSums(otu_table(rizo1))[which.min(colSums(otu_table(rizo1)))] \nmt=as.data.frame(sample_data(rizo1))[order(as.character(rownames(as.data.frame(sample_data(rizo1)))),decreasing=F),]\notu = otu_table(rizo1)\notu = as.data.frame(t(otu))\notu=otu[order(as.character(rownames(otu)),decreasing=FALSE),]\n\nrownames(otu)==rownames(mt) \nrownames(otu)=paste0(rownames(otu),\"/\",mt$Condition_Year)#we want to color in different colors mothers and suckers, and also the samples taken in each year\nsample_names = rownames(otu)\n\nout <- rarecurve(otu, step = 100, label = F) \nrare <- lapply(out, function(x){  \n  b <- as.data.frame(x)\n  b <- data.frame(ASV = b[,1], raw.read = rownames(b))\n  b$raw.read <- as.numeric(gsub(\"N\", \"\",  b$raw.read))\n  return(b)\n})\n\nnames(rare) <- sample_names\nrare <- map_dfr(rare, function(x){\n  z <- data.frame(x)\n  return(z)\n}, .id = \"Sample\")\n\nrare$Condition_Year=rare$Sample \nrare$Condition_Year=gsub(\".*/\", \"\", rare$Condition_Year)\nrare$raw.read=as.numeric(rare$raw.read)\n\np_rizo1=ggplot(rare, aes(x=raw.read, y=ASV, colour=Condition_Year, group=Sample)) +\n  theme_bw()+\n  geom_point(aes(colour=Condition_Year), size=0.85)+\n  geom_line(aes(colour=Condition_Year),size=1.2)+\n  geom_vline(aes(xintercept = min(sample_sums(rizo1))), \n             lty=1, colour=\"black\")+\n  scale_fill_manual(values = c(\"Immature_A\"=\"#00CCFF\", \"Mature_A\"=\"#00FFCC\",\n                              \"Immature_B\"=\"#6600CC\" ,\"Mature_B\"=\"magenta\"))+\n  scale_color_manual(values = c(\"Immature_A\"=\"#00CCFF\", \"Mature_A\"=\"#00FFCC\",\n                                \"Immature_B\"=\"#6600CC\" ,\"Mature_B\"=\"magenta\"),\n                     name=\"Condition (sampling year)\",\n                     breaks=c(\"Immature_A\", \"Mature_A\",\n                              \"Immature_B\" ,\"Mature_B\"),\n                     labels=c(\"Suckers (2022)\", \"Mothers (2022)\",\n                              \"Suckers (2023)\",\"Mothers (2023)\"))+\n  labs(title= \"Rhizosphere; Plot 1\", x=\"Number of sequences\", y=\"Number of ASV\")+\n  guides(alpha=FALSE)+\n  theme(legend.key=element_blank(),\n        legend.title.align = 0.85,\n        legend.title = element_text(face=\"bold\",size=14),\n        axis.text = element_text(size=14),\n        axis.title = element_text(size = 16),\n        plot.title = element_text(hjust=0.5, face=\"bold\", size=16),\n        legend.text = element_text(size = 16))\nx11()\np_rizo1\n\n#Plot2\nmin(sample_sums(rizo2)) \ncolSums(otu_table(rizo2))[which.min(colSums(otu_table(rizo2)))] \nmt=as.data.frame(sample_data(rizo2))[order(as.character(rownames(as.data.frame(sample_data(rizo2)))),decreasing=F),]\notu = otu_table(rizo2)\notu = as.data.frame(t(otu))\notu=otu[order(as.character(rownames(otu)),decreasing=FALSE),]\n\nrownames(otu)==rownames(mt)\nrownames(otu)=paste0(rownames(otu),\"/\",mt$Condition_Year)\nsample_names = rownames(otu)\n\nout <- rarecurve(otu, step = 100, label = F) \nrare <- lapply(out, function(x){ \n  b <- as.data.frame(x)\n  b <- data.frame(ASV = b[,1], raw.read = rownames(b))\n  b$raw.read <- as.numeric(gsub(\"N\", \"\",  b$raw.read))\n  return(b)\n})\n\nnames(rare) <- sample_names\nrare <- map_dfr(rare, function(x){\n  z <- data.frame(x)\n  return(z)\n}, .id = \"Sample\")\n\nrare$Condition_Year=rare$Sample \nrare$Condition_Year=gsub(\".*/\", \"\", rare$Condition_Year)\nrare$raw.read=as.numeric(rare$raw.read)\n\np_rizo2=ggplot(rare, aes(x=raw.read, y=ASV, colour=Condition_Year, group=Sample)) +\n  theme_bw()+\n  geom_point(aes(colour=Condition_Year), size=0.85)+\n  geom_line(aes(colour=Condition_Year),size=1.2)+\n  geom_vline(aes(xintercept = min(sample_sums(rizo2))), \n             lty=1, colour=\"black\")+\n  scale_fill_manual(values = c(\"Immature_A\"=\"#FF0000\", \"Mature_A\"=\"#FF9999\",\n                               \"Immature_B\"=\"#993300\" ,\"Mature_B\"=\"black\"))+\n  scale_color_manual(values = c(\"Immature_A\"=\"#FF0000\", \"Mature_A\"=\"#FF9999\",\n                               \"Immature_B\"=\"#993300\" ,\"Mature_B\"=\"black\"),\n                     name=\"Condition (sampling year)\",\n                     breaks=c(\"Immature_A\", \"Mature_A\",\n                              \"Immature_B\" ,\"Mature_B\"),\n                     labels=c(\"Suckers (2022)\", \"Mothers (2022)\",\n                              \"Suckers (2023)\",\"Mothers (2023)\"))+\n  labs(title= \"Rhizosphere; Plot 2\", x=\"Number of sequences\", y=\"Number of ASV\")+\n  guides(alpha=FALSE)+\n  theme(legend.key=element_blank(),\n        legend.title.align = 0.85,\n        legend.title = element_text(face=\"bold\",size=14),\n        axis.text = element_text(size=14),\n        axis.title = element_text(size = 16),\n        plot.title = element_text(hjust=0.5, face=\"bold\", size=16),\n        legend.text = element_text(size = 16))\nx11()\np_rizo2\n\n#ENDOSPHERE SAMPLES:\nmin(sample_sums(endo1)) \ncolSums(otu_table(endo1))[which.min(colSums(otu_table(endo1)))] \nmt=as.data.frame(sample_data(endo1))[order(as.character(rownames(as.data.frame(sample_data(endo1)))),decreasing=F),]\notu = otu_table(endo1)\notu = as.data.frame(t(otu))\notu=otu[order(as.character(rownames(otu)),decreasing=FALSE),]\n\nrownames(otu)==rownames(mt)\nrownames(otu)=paste0(rownames(otu),\"/\",mt$Condition_Year)\nsample_names = rownames(otu)\n\nout <- rarecurve(otu, step = 100, label = F) \nrare <- lapply(out, function(x){  \n  b <- as.data.frame(x)\n  b <- data.frame(ASV = b[,1], raw.read = rownames(b))\n  b$raw.read <- as.numeric(gsub(\"N\", \"\",  b$raw.read))\n  return(b)\n})\n\nnames(rare) <- sample_names\nrare <- map_dfr(rare, function(x){\n  z <- data.frame(x)\n  return(z)\n}, .id = \"Sample\")\n\nrare$Condition_Year=rare$Sample\nrare$Condition_Year=gsub(\".*/\", \"\", rare$Condition_Year)\nrare$raw.read=as.numeric(rare$raw.read)\n\np_endo1=ggplot(rare, aes(x=raw.read, y=ASV, colour=Condition_Year, group=Sample)) +\n  theme_bw()+\n  geom_point(aes(colour=Condition_Year), size=0.85)+\n  geom_line(aes(colour=Condition_Year),size=1.2)+\n  geom_vline(aes(xintercept = min(sample_sums(endo1))), \n             lty=1, colour=\"black\")+\n  scale_fill_manual(values = c(\"Immature_A\"=\"#00CCFF\", \"Mature_A\"=\"#00FFCC\",\n                               \"Immature_B\"=\"#6600CC\" ,\"Mature_B\"=\"magenta\"))+\n  scale_color_manual(values = c(\"Immature_A\"=\"#00CCFF\", \"Mature_A\"=\"#00FFCC\",\n                                \"Immature_B\"=\"#6600CC\" ,\"Mature_B\"=\"magenta\"),\n                     name=\"Condition (sampling year)\",\n                     breaks=c(\"Immature_A\", \"Mature_A\",\n                              \"Immature_B\" ,\"Mature_B\"),\n                     labels=c(\"Suckers (2022)\", \"Mothers (2022)\",\n                              \"Suckers (2023)\",\"Mothers (2023)\"))+\n  labs(title= \"Endosphere; Plot 1\", x=\"Number of sequences\", y=\"Number of ASV\")+\n  guides(alpha=FALSE)+\n  theme(legend.key=element_blank(),\n        legend.title.align = 0.85,\n        legend.title = element_text(face=\"bold\",size=14),\n        axis.text = element_text(size=14),\n        axis.title = element_text(size = 16),\n        plot.title = element_text(hjust=0.5, face=\"bold\", size=16),\n        legend.text = element_text(size = 16))\nx11()\np_endo1\n\n#Plot2\nmin(sample_sums(endo2))\ncolSums(otu_table(endo2))[which.min(colSums(otu_table(endo2)))] \nmt=as.data.frame(sample_data(endo2))[order(as.character(rownames(as.data.frame(sample_data(endo2)))),decreasing=F),]\notu = otu_table(endo2)\notu = as.data.frame(t(otu))\notu=otu[order(as.character(rownames(otu)),decreasing=FALSE),]\n\nrownames(otu)==rownames(mt)\nrownames(otu)=paste0(rownames(otu),\"/\",mt$Condition_Year)\nsample_names = rownames(otu)\n\nout <- rarecurve(otu, step = 100, label = F) \nrare <- lapply(out, function(x){\n  b <- as.data.frame(x)\n  b <- data.frame(ASV = b[,1], raw.read = rownames(b))\n  b$raw.read <- as.numeric(gsub(\"N\", \"\",  b$raw.read))\n  return(b)\n})\n\nnames(rare) <- sample_names\nrare <- map_dfr(rare, function(x){\n  z <- data.frame(x)\n  return(z)\n}, .id = \"Sample\")\n\nrare$Condition_Year=rare$Sample \nrare$Condition_Year=gsub(\".*/\", \"\", rare$Condition_Year)\nrare$raw.read=as.numeric(rare$raw.read)\n\np_endo2=ggplot(rare, aes(x=raw.read, y=ASV, colour=Condition_Year, group=Sample)) +\n  theme_bw()+\n  geom_point(aes(colour=Condition_Year), size=0.85)+\n  geom_line(aes(colour=Condition_Year),size=1.2)+\n  geom_vline(aes(xintercept = min(sample_sums(endo2))), \n             lty=1, colour=\"black\")+\n  scale_fill_manual(values = c(\"Immature_A\"=\"#FF0000\", \"Mature_A\"=\"#FF9999\",\n                               \"Immature_B\"=\"#993300\" ,\"Mature_B\"=\"black\"))+\n  scale_color_manual(values = c(\"Immature_A\"=\"#FF0000\", \"Mature_A\"=\"#FF9999\",\n                                \"Immature_B\"=\"#993300\" ,\"Mature_B\"=\"black\"),\n                     name=\"Condition (sampling year)\",\n                     breaks=c(\"Immature_A\", \"Mature_A\",\n                              \"Immature_B\" ,\"Mature_B\"),\n                     labels=c(\"Suckers (2022)\", \"Mothers (2022)\",\n                              \"Suckers (2023)\",\"Mothers (2023)\"))+\n  labs(title= \"Endosphere; Plot 2\", x=\"Number of sequences\", y=\"Number of ASV\")+\n  guides(alpha=FALSE)+\n  theme(legend.key=element_blank(),\n        legend.title.align = 0.85,\n        legend.title = element_text(face=\"bold\",size=14),\n        axis.text = element_text(size=14),\n        axis.title = element_text(size = 16),\n        plot.title = element_text(hjust=0.5, face=\"bold\", size=16),\n        legend.text = element_text(size = 16))\nx11()\np_endo2\n```\n:::\n\n\nAs shown in Figures 2-5, at the same rarefaction levels, most of the samples reached to the asymptote, so the sequencing effort can be considered enough. Furthermore, no clear patterns of richnes can be deduced from the rarefaction curves\n\n![Figure 2. Rarefaction curves corresponding to rhizosphere samples of the south plot (also named \"Plot 1\").](images/Rarefacc_rizo1.jpeg){fig-align=\"center\" width=\"700\"} ![Figure 3. Rarefaction curves corresponding to rhizosphere samples of the north plot (also named \"Plot 2\").](images/Rarefacc_rizo2.jpeg){fig-align=\"center\" width=\"700\"} ![Figure 4. Rarefaction curves corresponding to root endosphere samples of the south plot (also named \"Plot 1\").](images/Rarefacc_endo1.jpeg){fig-align=\"center\" width=\"700\"} ![Figure 5. Rarefaction curves corresponding to root endosphere samples of the north plot (also named \"Plot 2\").](images/Rarefacc_endo2.jpeg){fig-align=\"center\" width=\"700\"}\n\n# 4. Alpha diversity analysis\n\nWe are going to estimate the richness, diversity and evenness of each sample by calculating the number of observed ASVs, and Shannon's and Inverse of Simpson and Pielou's indices, respectively.\n\nSome alpha diversity indices are sensitive to different library sizes, so first, we will rarefy all the samples to the smallest library size to avoid potential biases associated to different number of sequences.\n\n::: callout-note\nIt should be made a rarefaction per groups of samples to be compared. For instance, if we want to compare the diversity of rhizosphere bacterial communitites of Mother and Suckers plants located in the south plot, we should calculate the rarefaction level corresponding to the subgroup of Rhizosphere samples of the south plot (namely, object *rizo1*). And then, rarefy to the smallest library size of the samples included in the object *rizo1*.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) Endosphere samples\n#a.1) South plot\nrarefac_endo1=rarefy_even_depth(endo1, sample.size = min(sample_sums(endo1)),rngseed=T)#rarefaction. You can indicate manually the minimum sample size or by using the function \"min\"\nsample_sums(rarefac_endo1) #check that now all the samples have the same number of sequences\ncolSums(otu_table(rarefac_endo1))[which.min(colSums(otu_table(rarefac_endo1)))]\n\nindices_endo1=estimate_richness(rarefac_endo1, measures=c(\"Observed\", \"InvSimpson\", \"Shannon\"))#calculate the indices\nindices_endo1$Pielou=indices_endo1$Shannon/log(indices_endo1$Observed)#calculated manually the Pielou index\n\nrownames(sample_data(rarefac_endo1))==row.names(indices_endo1)\nmt_indices_endo1=data.frame(sample_data(rarefac_endo1))#extract the metadata\n\nindices_endo1=add_column(indices_endo1, mt_indices_endo1[1:ncol(mt_indices_endo1)], .before = \"Observed\")#add the metadata to the indices table, before the column named \"Observed\"\n\nwrite.table(data.frame(\" \"=rownames(indices_endo1),indices_endo1),file=\"Indices_Endo_Plot1_porReplicas.txt\", sep=\"\\t\",row.names =F)\n\n#We have already calculated the indices per replicates but we are interested in the mean and standard values per groups of samples, so let's calculate them:\nmedia_endo1=aggregate(indices_endo1[,11:14], list(grouping=indices_endo1$Condition_Year), mean)%>% mutate_if(is.numeric, round, digits=2)#be careful. Here you have to indicate the position of the columns where the values of the indices are placed\nsd_endo1=aggregate(indices_endo1[,11:14], list(grouping=indices_endo1$Condition_Year), sd)%>% mutate_if(is.numeric, round, digits=2)\n\nmean_sd = NULL\nfor (i in 2:5){ #be careful with the position of the numeric values (alpha indices)\n  mean_sd <- cbind(mean_sd,paste0(media_endo1[,i], \" +/- \", sd_endo1[,i]))}#then in Excel you can replace \"+/-\" by the corresponding symbol\n\ntabla_publicaciones_endo1 = cbind(media_endo1$grouping, mean_sd)\ncolnames(tabla_publicaciones_endo1) = c(\"Group\",\"Observed\", \"Shannon\", \"InvSimpson\", \"Pielou\")\nas.data.frame(tabla_publicaciones_endo1)\n\nwrite.table(tabla_publicaciones_endo1,file=\"Indices_media_sd_Endo_Plot1.txt\", sep=\"\\t\",row.names =F)#this table shows the mean +/- sd of the indices for each group of samples. Ready for publication\n\n#a.2) North plot\nrarefac_endo2=rarefy_even_depth(endo2, sample.size = min(sample_sums(endo2)),rngseed=T)\nsample_sums(rarefac_endo2)\ncolSums(otu_table(rarefac_endo2))[which.min(colSums(otu_table(rarefac_endo2)))]\n\nindices_endo2=estimate_richness(rarefac_endo2, measures=c(\"Observed\", \"InvSimpson\", \"Shannon\"))\nindices_endo2$Pielou=indices_endo2$Shannon/log(indices_endo2$Observed)\n\nrownames(sample_data(rarefac_endo2))==row.names(indices_endo2)\nmt_indices_endo2=data.frame(sample_data(rarefac_endo2))\n\nindices_endo2=add_column(indices_endo2, mt_indices_endo2[1:ncol(mt_indices_endo2)], .before = \"Observed\")\n\nwrite.table(data.frame(\" \"=rownames(indices_endo2),indices_endo2),file=\"Indices_Endo_Plot2_porReplicas.txt\", sep=\"\\t\",row.names =F)\n\nmedia_endo2=aggregate(indices_endo2[,11:14], list(grouping=indices_endo2$Condition_Year), mean)%>% mutate_if(is.numeric, round, digits=2)\nsd_endo2=aggregate(indices_endo2[,11:14], list(grouping=indices_endo2$Condition_Year), sd)%>% mutate_if(is.numeric, round, digits=2)\n\nmean_sd = NULL\nfor (i in 2:5){ \n  mean_sd <- cbind(mean_sd,paste0(media_endo2[,i], \" +/- \", sd_endo2[,i]))}\n\ntabla_publicaciones_endo2 = cbind(media_endo2$grouping, mean_sd)\ncolnames(tabla_publicaciones_endo2) = c(\"Group\",\"Observed\", \"Shannon\", \"InvSimpson\", \"Pielou\")\nas.data.frame(tabla_publicaciones_endo2)\n\nwrite.table(tabla_publicaciones_endo2,file=\"Indices_media_sd_Endo_Plot2.txt\", sep=\"\\t\",row.names =F)\n\n#b) Rhizosphere\n#b.1) South plot\nrarefac_rizo1=rarefy_even_depth(rizo1, sample.size = min(sample_sums(rizo1)),rngseed=T)\nsample_sums(rarefac_rizo1) \ncolSums(otu_table(rarefac_rizo1))[which.min(colSums(otu_table(rarefac_rizo1)))]\n\nindices_rizo1=estimate_richness(rarefac_rizo1, measures=c(\"Observed\", \"InvSimpson\", \"Shannon\"))\nindices_rizo1$Pielou=indices_rizo1$Shannon/log(indices_rizo1$Observed)\n\nrownames(sample_data(rarefac_rizo1))==row.names(indices_rizo1)\nmt_indices_rizo1=data.frame(sample_data(rarefac_rizo1))\n\nindices_rizo1=add_column(indices_rizo1, mt_indices_rizo1[1:ncol(mt_indices_rizo1)], .before = \"Observed\")\n\nwrite.table(data.frame(\" \"=rownames(indices_rizo1),indices_rizo1),file=\"Indices_rizo_Plot1_porReplicas.txt\", sep=\"\\t\",row.names =F)\n\nmedia_rizo1=aggregate(indices_rizo1[,11:14], list(grouping=indices_rizo1$Condition_Year), mean)%>% mutate_if(is.numeric, round, digits=2)\nsd_rizo1=aggregate(indices_rizo1[,11:14], list(grouping=indices_rizo1$Condition_Year), sd)%>% mutate_if(is.numeric, round, digits=2)\n\nmean_sd = NULL\nfor (i in 2:5){ #OJO aqui con el numero de las columnas numericas\n  mean_sd <- cbind(mean_sd,paste0(media_rizo1[,i], \" +/- \", sd_rizo1[,i]))}\n\ntabla_publicaciones_rizo1 = cbind(media_rizo1$grouping, mean_sd)\ncolnames(tabla_publicaciones_rizo1) = c(\"Group\",\"Observed\", \"Shannon\", \"InvSimpson\", \"Pielou\")\nas.data.frame(tabla_publicaciones_rizo1)\n\nwrite.table(tabla_publicaciones_rizo1,file=\"Indices_media_sd_rizo_Plot1.txt\", sep=\"\\t\",row.names =F)\n\n#b.2) North plot\nrarefac_rizo2=rarefy_even_depth(rizo2, sample.size = min(sample_sums(rizo2)),rngseed=T)\nsample_sums(rarefac_rizo2) \ncolSums(otu_table(rarefac_rizo2))[which.min(colSums(otu_table(rarefac_rizo2)))]\n\nindices_rizo2=estimate_richness(rarefac_rizo2, measures=c(\"Observed\", \"InvSimpson\", \"Shannon\"))\nindices_rizo2$Pielou=indices_rizo2$Shannon/log(indices_rizo2$Observed)\n\nrownames(sample_data(rarefac_rizo2))==row.names(indices_rizo2)\nmt_indices_rizo2=data.frame(sample_data(rarefac_rizo2))\n\nindices_rizo2=add_column(indices_rizo2, mt_indices_rizo2[1:ncol(mt_indices_rizo2)], .before = \"Observed\")\nwrite.table(data.frame(\" \"=rownames(indices_rizo2),indices_rizo2),file=\"Indices_rizo_Plot2_porReplicas.txt\", sep=\"\\t\",row.names =F)\n\nmedia_rizo2=aggregate(indices_rizo2[,11:14], list(grouping=indices_rizo2$Condition_Year), mean)%>% mutate_if(is.numeric, round, digits=2)\nsd_rizo2=aggregate(indices_rizo2[,11:14], list(grouping=indices_rizo2$Condition_Year), sd)%>% mutate_if(is.numeric, round, digits=2)\n\nmean_sd = NULL\nfor (i in 2:5){ \n  mean_sd <- cbind(mean_sd,paste0(media_rizo2[,i], \" +/- \", sd_rizo2[,i]))}\n\ntabla_publicaciones_rizo2 = cbind(media_rizo2$grouping, mean_sd)\ncolnames(tabla_publicaciones_rizo2) = c(\"Group\",\"Observed\", \"Shannon\", \"InvSimpson\", \"Pielou\")\nas.data.frame(tabla_publicaciones_rizo2)\n\nwrite.table(tabla_publicaciones_rizo2,file=\"Indices_media_sd_rizo_Plot2.txt\", sep=\"\\t\",row.names =F)\n```\n:::\n\n\n## 4.1 Statistical analysis\n\nWe have just calculated the alpha indices per sample and per group of samples, but we have to compare them among group of samples. For that purpose, we will apply univariate statistic test. We will go into different steps, which briefly consist of:\n\n1.  **Check the normality of the data**: we have to confirm whether our variables follow a normal distribution. If they are not normally distributed, we will also check if they are very far from the normal distribution.\n\n2.  **Check the homoscedasticity of the data**: confirm if dispersion of the variable is the same in all the groups of samples to compare. If the distribution of the variables is normal (or almost normal) and there is homogeneity of variances, we will apply parametric tests. Otherwise, we will use non-parametric tests.\n\n3.  **Check the presence of the outliers**. Outliers are not a problem, but we have to check if they are extreme outliers. In that case, we will apply robust tests\n\n4.  **Apply the proper statistical test.** Depending on the characteristics of the variables and the experimental design (one factor to be studied: one-way statistics; two factors: two-way statistical tests).\n\n5.  **Calculate the size of the effect**. In case we find statistical differences among groups of samples in the studied variables, we have to measure the magnitude of the effect.\n\nWe have to study separately each individual variable (in this case, each alpha diversity index).\n\nIn this example, we are interested in two factors: the effect of the sampling year, and the effect of the plants' developmental stage, also named *Condition* in this web\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) ENDOSPHERE\n#a.1) South plot\n#Normality\nindices_endo1%>%\n  group_by(Condition, Year)%>%#\n  shapiro_test(Observed)\n \nindices_endo1%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Shannon)\n\nindices_endo1%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(InvSimpson)#data are not normally distributed\n\nindices_endo1%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Pielou)\n\nx11()#let's see how far are our data from the normal distribution into a qq-plot.\nggqqplot(indices_endo1, \"InvSimpson\", ggtheme = theme_bw()) +\n  facet_grid(Condition ~ Year)\n```\n:::\n\n\nAs shown in Figure 6, just one point is far from the normal distribution, so we can still applied parametric data is homoscedasticity hypothesis is met.\n\n![Figure 6. QQplot showing distribution of the InvSimpson corresponding to root endosphere samples f plants located in the south plot](images/graficoQQ_InvSimpson_endo1.jpeg){fig-align=\"center\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Homoscedasticity\nindices_endo1 %>% levene_test(Observed ~ Condition*Year)\nindices_endo1 %>% levene_test(Shannon ~ Condition*Year)\nindices_endo1 %>% levene_test(InvSimpson ~ Condition*Year)\nindices_endo1 %>% levene_test(Pielou ~ Condition*Year)\n \n#Outliers\na=indices_endo1 %>% group_by(Condition,Year)%>%  identify_outliers(Observed);View(a)\nb=indices_endo1 %>% group_by(Condition, Year)%>% identify_outliers(Shannon);View(b)\nc=indices_endo1 %>% group_by(Condition, Year)%>% identify_outliers(InvSimpson);View(c)\nd=indices_endo1 %>%group_by(Condition, Year)%>% identify_outliers(Pielou); View(d)\n\n#Hypothesis contrasting tests\nindices_endo1 %>%  anova_test(Observed ~ Condition * Year)#two-way ANOVA because our data are homoscedatic\nindices_endo1 %>%  anova_test(Shannon ~ Condition * Year)\nindices_endo1 %>%  anova_test(Pielou ~ Condition * Year)\n\nindices_endo1$Condition=as.factor(indices_endo1$Condition)#robust test because Invesrse of Simpson have extreme outliers\nindices_endo1$Year=as.factor(indices_endo1$Year)\nt2way(InvSimpson ~ Condition*Year, data=indices_endo1)\n\n#We did not find the interaction between Year and plant developmental Condition significant in any of the variables studied, but the effect of Year or Condition (or both) was statistaclly significant on some of the indices. In that case, we have to study the effect of each factor individually:\n\n#Post-hoc tests\nindices_endo1 %>%pairwise_t_test(Observed~Year)\nindices_endo1 %>%pairwise_t_test(Shannon~Year)\nindices_endo1 %>%pairwise_t_test(Pielou~Condition)\nindices_endo1 %>%pairwise_t_test(Pielou~Year)\nindices_endo1$Condition=as.factor(indices_endo1$Condition)\nindices_endo1$Year=as.factor(indices_endo1$Year)\nmcp2atm(InvSimpson~Year*Condition, data=indices_endo1) #the robust post-hoc test\n\n#a.2) North plot\n#Normality\nindices_endo2%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Observed)\n\nindices_endo2%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Shannon)\n\nindices_endo2%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(InvSimpson)\n\nindices_endo2%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Pielou)\n\nx11()\nggqqplot(indices_endo2, \"InvSimpson\", ggtheme = theme_bw()) +\n  facet_grid(Condition ~ Year)\n\n#Homoscedasticity\nindices_endo2 %>% levene_test(Observed ~ Condition*Year)\nindices_endo2 %>% levene_test(Shannon ~ Condition*Year)\nindices_endo2 %>% levene_test(InvSimpson ~ Condition*Year)\nindices_endo2 %>% levene_test(Pielou ~ Condition*Year)\n\n#outliers\na=indices_endo2 %>%group_by(Condition,Year)%>%identify_outliers(Observed); View(a)\nb=indices_endo2 %>%group_by(Condition, Year)%>%identify_outliers(Shannon);View(b)\nc=indices_endo2 %>%group_by(Condition, Year)%>%identify_outliers(InvSimpson); View(c)\nd=indices_endo2 %>%group_by(Condition, Year)%>%identify_outliers(Pielou);View(d)\n\n#two-way tests \nindices_endo2 %>%  anova_test(Observed ~ Condition * Year)#two way ANOVA\nindices_endo2 %>%  anova_test(Shannon ~ Condition * Year)\nindices_endo2$Condition=as.factor(indices_endo2$Condition)\nindices_endo2$Year=as.factor(indices_endo2$Year)\nt2way(InvSimpson ~ Condition*Year, data=indices_endo2)#robust test\n\n#The dispersion of the Pielou index for both groups of samples is not homogeneous, so we cannot compute parametric tests. However, there are not suitable options for non-parametric two-way tests. Let's make a data transformation according to this tutorial.http://depts.washington.edu/acelab/proj/art/index.html\n\nindices_endo2$Condition=as.factor(indices_endo2$Condition)\nindices_endo2$Year=as.factor(indices_endo2$Year)\nm = art(Observed ~ Year * Condition, data=indices_endo2) # linear model syntax; see lm()\nmm=anova(m)\neta_squared(mm)\n\n#B) RHIZOSPHERE\n#b.1) South plot\n#normality\nindices_rizo1%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Observed)\n\nindices_rizo1%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Shannon)\n\nindices_rizo1%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(InvSimpson)\n\nindices_rizo1%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Pielou)\n\nx11()\nggqqplot(indices_rizo1, \"Observed\", ggtheme = theme_bw()) +\n  facet_grid(Condition ~ Year)\nx11()\nggqqplot(indices_rizo1, \"InvSimpson\", ggtheme = theme_bw()) +\n  facet_grid(Condition ~ Year)\nx11()\nggqqplot(indices_rizo1, \"Pielou\", ggtheme = theme_bw()) +\n  facet_grid(Condition ~ Year)\n\n#Homocesdasticity\nindices_rizo1 %>% levene_test(Observed ~ Condition*Year)\nindices_rizo1 %>% levene_test(Shannon ~ Condition*Year)\nindices_rizo1 %>% levene_test(InvSimpson ~ Condition*Year)\nindices_rizo1 %>% levene_test(Pielou ~ Condition*Year)\n\n#Outliers\na=indices_rizo1 %>% group_by(Condition,Year)%>%identify_outliers(Observed); View(a)\nb=indices_rizo1 %>% group_by(Condition, Year)%>%identify_outliers(Shannon); View(b)\nc=indices_rizo1 %>% group_by(Condition, Year)%>%identify_outliers(InvSimpson);View(c)\nd=indices_rizo1 %>% group_by(Condition, Year)%>%identify_outliers(Pielou);View(d)\n\n#we found that Observed and InvSimpson have extremo outliers. We should check wether applying robust methods we maintain the homoscedasticity of the data\nindices_rizo1%>% filter(between(Observed,\n                 quantile(Observed,0.1),  #remove the 10% of the data (in one tail)\n                 quantile(Observed, 0.9)))%>%#remove the 10% of the data (in the other tail)\n  levene_test(Observed ~ Year*Plot)#still homoscedastic\nindices_rizo1%>% filter(between(InvSimpson,\n                 quantile(InvSimpson,0.1), \n                 quantile(InvSimpson, 0.9)))%>%\n  levene_test(InvSimpson ~ Year*Plot)#still homoscedastic\n\n#two-way tests\nindices_rizo1$Condition=as.factor(indices_rizo1$Condition)\nindices_rizo1$Year=as.factor(indices_rizo1$Year)\nt2way(Observed ~ Condition*Year, data=indices_rizo1)#robust test\nindices_rizo1 %>%  anova_test(Shannon ~ Condition * Year)\nt2way(InvSimpson ~ Condition*Year, data=indices_rizo1)#robust test\nindices_rizo1 %>%  anova_test(Pielou ~ Condition * Year)\n\n#Post-hoc:\nindices_rizo1$Year=as.factor(indices_rizo1$Year)\nmcp2atm(Observed~Year*Condition, data=indices_rizo1)#robust test\n\n#effect size\nx=lm(Observed~Condition*Year, data=indices_rizo1)\neta_squared(x) \n\n#b.2) North plot\n#Normality\nindices_rizo2%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Observed)\n\nindices_rizo2%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Shannon)\n\nindices_rizo2%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(InvSimpson)\n\nindices_rizo2%>%\n  group_by(Condition, Year)%>%\n  shapiro_test(Pielou)\n\nx11()\nggqqplot(indices_rizo2, \"InvSimpson\", ggtheme = theme_bw()) +\n  facet_grid(Condition ~ Year)\n\n#Homoscedasticity\nindices_rizo2 %>% levene_test(Observed ~ Condition*Year)\nindices_rizo2 %>% levene_test(Shannon ~ Condition*Year)\nindices_rizo2 %>% levene_test(InvSimpson ~ Condition*Year)\nindices_rizo2 %>% levene_test(Pielou ~ Condition*Year)\n\n#Outliers\na=indices_rizo2 %>%group_by(Condition,Year)%>%identify_outliers(Observed); View(a)\nb=indices_rizo2 %>%group_by(Condition, Year)%>%identify_outliers(Shannon);View(b) \nc=indices_rizo2 %>%group_by(Condition, Year)%>%identify_outliers(InvSimpson);View(c)\nd=indices_rizo2 %>%group_by(Condition, Year)%>%identify_outliers(Pielou);View(d)\n\n#Checking the possibility to apply robust tests\nindices_rizo2%>% \n  filter(between(Observed,\n                 quantile(Observed,0.1),  \n                 quantile(Observed, 0.9)))%>%\n  levene_test(Observed ~ Year*Condition)\n\n#tests\nindices_rizo2$Condition=as.factor(indices_rizo2$Condition)\nindices_rizo2$Year=as.factor(indices_rizo2$Year)\nt2way(Observed ~ Condition*Year, data=indices_rizo2)\nindices_rizo2 %>%  anova_test(Shannon ~ Condition * Year)\nindices_rizo2 %>%  anova_test(InvSimpson ~ Condition * Year)\nindices_rizo2 %>%  anova_test(Pielou ~ Condition * Year)\n\n#Post-hoc\nindices_rizo2 %>%pairwise_t_test(Pielou~Condition)\n```\n:::\n\n\nWe can also compare if the alpha diversity indices of bacterial communities associated to mothers, first and second suckers are different each other. In the [index of this website](index.qmd \"Click if you want more information\"), you can find more details about the concepts of *Mothers*, *first suckers* and *second suckers*. These concepts are very similar to the concept of \"Generation\" in sexually reproducing plants, and that's exactly the name of the factor employed here. So, we will compare the indices of these groups, by the factor *Generation*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) RHIZOSPHERE\n# a.1) South plot\n#Normality\nindices_rizo1%>% group_by(Generation)%>% shapiro_test(Observed)\nindices_rizo1%>%  group_by(Generation)%>%  shapiro_test(Shannon)\nindices_rizo1%>%  group_by(Generation)%>%  shapiro_test(InvSimpson)\nindices_rizo1%>%  group_by(Generation)%>%  shapiro_test(Pielou)\n\nx11()\nggqqplot(indices_rizo1, \"Observed\", ggtheme = theme_bw()) +\n  facet_grid(Generation~Plot)\nx11()\nggqqplot(indices_rizo1, \"InvSimpson\", ggtheme = theme_bw()) +\n  facet_grid(Generation ~ Plot)\nx11()\nggqqplot(indices_rizo1, \"Pielou\", ggtheme = theme_bw()) +\n  facet_grid(Generation ~ Plot)\n\n#Homoscedasticity\nindices_rizo1 %>% levene_test(Observed ~ Generation)\nindices_rizo1 %>% levene_test(Shannon ~ Generation)\nindices_rizo1 %>% levene_test(InvSimpson ~ Generation)\nindices_rizo1 %>% levene_test(Pielou ~ Generation)\n\n#Outliers\na=indices_rizo1 %>%group_by(Generation)%>%identify_outliers(Observed); View(a)\nb=indices_rizo1 %>%group_by(Generation)%>%identify_outliers(Shannon); View(b)\nc=indices_rizo1 %>%group_by(Generation)%>%identify_outliers(InvSimpson); View(c)\nd=indices_rizo1 %>%group_by(Generation)%>%identify_outliers(Pielou); View(d)\n\n#check whether the variables \"Observed\" and \"InvSimpson\" are still homocedastic in case we apply robust tests\nindices_rizo1%>% \n  filter(between(Observed,\n                 quantile(Observed,0.1),  \n                 quantile(Observed, 0.9)))%>%\n  levene_test(Observed ~ Generation)\n\nindices_rizo1%>% \n  filter(between(InvSimpson,\n                 quantile(InvSimpson,0.1),  \n                 quantile(InvSimpson, 0.9)))%>%\n  levene_test(InvSimpson ~ Generation)\n\n\n#Tests\nt1way(Observed~Generation, data=indices_rizo1)#one-way robust test\nindices_rizo1 %>%  anova_test(Shannon ~ Generation)#one-way ANOVA\nt1way(InvSimpson~Generation, data=indices_rizo1)\nindices_rizo1 %>%  anova_test(Pielou ~ Generation)\n\n\n#a.2) North plot\nindices_rizo2%>% group_by(Generation)%>% shapiro_test(Observed)\nindices_rizo2%>%  group_by(Generation)%>%  shapiro_test(Shannon)\nindices_rizo2%>%  group_by(Generation)%>%  shapiro_test(InvSimpson)\nindices_rizo2%>%  group_by(Generation)%>%  shapiro_test(Pielou)\n\nx11()\nggqqplot(indices_rizo2, \"Observed\", ggtheme = theme_bw()) +\n  facet_grid(Generation~Plot)\n\nx11()\nggqqplot(indices_rizo2, \"InvSimpson\", ggtheme = theme_bw()) +\n  facet_grid(Generation ~ Plot)\n\n#Homoscedasticity\nindices_rizo2 %>% levene_test(Observed ~ Generation)\nindices_rizo2 %>% levene_test(Shannon ~ Generation)\nindices_rizo2 %>% levene_test(InvSimpson ~ Generation)\nindices_rizo2 %>% levene_test(Pielou ~ Generation)\n\n#Outliers\na=indices_rizo2 %>%group_by(Generation)%>%identify_outliers(Observed); View(a)\nb=indices_rizo2 %>% group_by(Generation)%>%identify_outliers(Shannon);View(b)\nc=indices_rizo2 %>%group_by(Generation)%>%identify_outliers(InvSimpson); View(c)\nd=indices_rizo2 %>%group_by(Generation)%>%identify_outliers(Pielou); View(d)\n\nindices_rizo2%>% \n  filter(between(InvSimpson,\n                 quantile(InvSimpson,0.1),  \n                 quantile(InvSimpson, 0.9)))%>%\n  levene_test(InvSimpson ~ Generation)\n\n#Tests\nindices_rizo2 %>%  anova_test(Observed ~ Generation)\nindices_rizo2 %>%  anova_test(Shannon ~ Generation)\nt1way(InvSimpson~Generation, data=indices_rizo2)\nindices_rizo2 %>%  anova_test(Pielou ~ Generation)\n\n#b) ENDOSPHERE\n#b.1) South plot\n#Normality\nindices_endo1%>% group_by(Generation)%>% shapiro_test(Observed)\nindices_endo1%>%  group_by(Generation)%>%  shapiro_test(Shannon)\nindices_endo1%>%  group_by(Generation)%>%  shapiro_test(InvSimpson)\nindices_endo1%>%  group_by(Generation)%>%  shapiro_test(Pielou)\n\nx11()\nggqqplot(indices_endo1, \"InvSimpson\", ggtheme = theme_bw()) +\n  facet_grid(Generation~Plot)\n\n#Homoscedasticity\nindices_endo1 %>% levene_test(Observed ~ Generation)\nindices_endo1 %>% levene_test(Shannon ~ Generation)\nindices_endo1 %>% levene_test(InvSimpson ~ Generation)\nindices_endo1 %>% levene_test(Pielou ~ Generation)\n\n#Outliers\na=indices_endo1 %>%group_by(Generation)%>%identify_outliers(Observed); View(a)\nb=indices_endo1 %>%group_by(Generation)%>%identify_outliers(Shannon) ;View(b)\nc=indices_endo1 %>%group_by(Generation)%>%identify_outliers(InvSimpson); View(c)\nd=indices_endo1 %>%group_by(Generation)%>%identify_outliers(Pielou); View(d)\n\nindices_endo1%>% \n  filter(between(InvSimpson,\n                 quantile(InvSimpson,0.1),  \n                 quantile(InvSimpson, 0.9)))%>%\n  levene_test(InvSimpson ~ Generation)\n\n#Tests\nindices_endo1 %>%  anova_test(Observed ~ Generation)\nindices_endo1 %>%  anova_test(Shannon ~ Generation)\nt1way(InvSimpson~Generation, data=indices_endo1)\nindices_endo1 %>%  anova_test(Pielou ~ Generation)\n\n#Post-hoc test: \"Observed\" resulted statistically significant, so let's apply Student's t-test\nindices_endo1%>% pairwise_t_test(Observed~Generation)\n\n#b.2) North plot\nindices_endo2%>% group_by(Generation)%>% shapiro_test(Observed)\nindices_endo2%>%  group_by(Generation)%>%  shapiro_test(Shannon)\nindices_endo2%>%  group_by(Generation)%>%  shapiro_test(InvSimpson)\nindices_endo2%>%  group_by(Generation)%>%  shapiro_test(Pielou)\n\nx11()\nggqqplot(indices_endo2, \"Observed\", ggtheme = theme_bw()) +\n  facet_grid(Generation~Plot)\n\nx11()\nggqqplot(indices_endo2, \"InvSimpson\", ggtheme = theme_bw()) +\n  facet_grid(Generation ~ Plot)\n\n#Homoscedasticity\nindices_endo2 %>% levene_test(Observed ~ Generation)\nindices_endo2 %>% levene_test(Shannon ~ Generation)\nindices_endo2 %>% levene_test(InvSimpson ~ Generation)\nindices_endo2 %>% levene_test(Pielou ~ Generation)\n\n#Outliers\na=indices_endo2 %>%group_by(Generation)%>%identify_outliers(Observed); View(a)\nb=indices_endo2 %>%group_by(Generation)%>%identify_outliers(Shannon) ;View(b)\nc=indices_endo2 %>%group_by(Generation)%>%identify_outliers(InvSimpson); View(c)\nd=indices_endo2 %>%group_by(Generation)%>%identify_outliers(Pielou); View(d)\n\nindices_endo2%>% \n  filter(between(InvSimpson,\n                 quantile(InvSimpson,0.1),  \n                 quantile(InvSimpson, 0.9)))%>%\n  levene_test(InvSimpson ~ Generation)\n\nindices_endo2%>%\n  filter(between(Pielou,\n                 quantile(Pielou,0.1),  \n                 quantile(Pielou, 0.9)))%>%\n  levene_test(Pielou ~ Generation)\n\n#tests\nindices_endo2 %>%  anova_test(Observed ~ Generation)\nindices_endo2 %>%  anova_test(Shannon ~ Generation)\nt1way(InvSimpson~Generation, data=indices_endo2)\nt1way(Pielou~Generation, data=indices_endo2)\n```\n:::\n\n\n# 5. Beta diversity analyses\n\nIt's time to analyze the differences in the diversity of the bacterial communities between samples. For that purpose, we will navigate into the multivariate statistics.\n\nFirstly, we have to normalize the data to avoid potential biases due to different library sizes (different number of sequences in the samples). We prefer the edgeR method, which is based on the TMM (*Trimmed Mean of the M-values*). This normalization is needed when we are working also with compositional data; that is to say, with data that expressed in percentages, such as microbiota counts. More information can be found [here](https://doi.org/10.1186/gb-2010-11-3-r25).\n\n## 5.1 TMM Normalization\n\nWe are going to use this normalization for both multivariate plots and for multivariate statistics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) RHIZOSPHERE\n#a.1) South plot\nrizo1_ASV=as.data.frame(otu_table(rizo1,taxa_are_rows = T))#extract the ASV table from the phyloseq object\nrizo1_mt=as.data.frame(sample_data(rizo1))#extract the metadata table from the phyloseq object\nrizo1_tax=as.data.frame(tax_table(rizo1))#extract the taxonomy table from the phyloseq object\nrizo1_tree=phy_tree(rizo1)#extract the phylogenetic tree from the phyloseq object\n\n#Create a new object suitbale for the normalization by the package edgeR\nrizo1_edgeR = DGEList(counts = rizo1_ASV, samples = rizo1_mt, genes = rizo1_tax)\n#Calculate the normalization factors to correct the differences in sequencing depth\nrizo1_edgeR = calcNormFactors(rizo1_edgeR)\n#Extract the normalized abundance\nrizo1_ASV_norm = cpm(rizo1_edgeR, normalized.lib.sizes=T, log=F)\n#Create the phyloseq elements with the ASV counts normalized\nrizo1_phy_OTU_norm=otu_table(as.data.frame(rizo1_ASV_norm,row.names=F), taxa_are_rows = T)\nrizo1_phy_taxonomy_norm=tax_table(as.matrix(rizo1_tax))\nrizo1_phy_metadata_norm=sample_data(rizo1_mt)\ntaxa_names(rizo1_phy_OTU_norm)= taxa_names(rizo1_phy_taxonomy_norm)\n\nidentical(rownames(rizo1_ASV_norm), rownames(rizo1_tax))#it should give \"TRUE\"\n#Join all the elements into a new phyloseq object\nrizo1_normalized_phyloseq<-phyloseq(rizo1_phy_OTU_norm, rizo1_phy_taxonomy_norm,rizo1_phy_metadata_norm,rizo1_tree)\n#a.2) North plot\nrizo2_ASV=as.data.frame(otu_table(rizo2,taxa_are_rows = T))\nrizo2_mt=as.data.frame(sample_data(rizo2))\nrizo2_tax=as.data.frame(tax_table(rizo2))\nrizo2_tree=phy_tree(rizo2)\n\nrizo2_edgeR = DGEList(counts = rizo2_ASV, samples = rizo2_mt, genes = rizo2_tax)\nrizo2_edgeR = calcNormFactors(rizo2_edgeR)\nrizo2_ASV_norm = cpm(rizo2_edgeR, normalized.lib.sizes=T, log=F)\n\nrizo2_phy_OTU_norm=otu_table(as.data.frame(rizo2_ASV_norm,row.names=F), taxa_are_rows = T)\nrizo2_phy_taxonomy_norm=tax_table(as.matrix(rizo2_tax))\nrizo2_phy_metadata_norm=sample_data(rizo2_mt)\ntaxa_names(rizo2_phy_OTU_norm)= taxa_names(rizo2_phy_taxonomy_norm)\n\nidentical(rownames(rizo2_ASV_norm), rownames(rizo2_tax))\n\nrizo2_normalized_phyloseq<-phyloseq(rizo2_phy_OTU_norm,rizo2_phy_taxonomy_norm,rizo2_phy_metadata_norm,rizo2_tree)\n\n#b)ENDOSPHERE\n#b.1) South plot\nendo1_ASV=as.data.frame(otu_table(endo1,taxa_are_rows = T))\nendo1_mt=as.data.frame(sample_data(endo1))\nendo1_tax=as.data.frame(tax_table(endo1))\nendo1_tree=phy_tree(endo1)\n\nendo1_edgeR = DGEList(counts = endo1_ASV, samples = endo1_mt, genes = endo1_tax)\nendo1_edgeR = calcNormFactors(endo1_edgeR)\nendo1_ASV_norm = cpm(endo1_edgeR, normalized.lib.sizes=T, log=F)\nendo1_phy_OTU_norm=otu_table(as.data.frame(endo1_ASV_norm,row.names=F), taxa_are_rows = T)\nendo1_phy_taxonomy_norm=tax_table(as.matrix(endo1_tax))\nendo1_phy_metadata_norm=sample_data(endo1_mt)\ntaxa_names(endo1_phy_OTU_norm)= taxa_names(endo1_phy_taxonomy_norm)\n\nidentical(rownames(endo1_ASV_norm), rownames(endo1_tax))\n\nendo1_normalized_phyloseq<-phyloseq(endo1_phy_OTU_norm,endo1_phy_taxonomy_norm,endo1_phy_metadata_norm,endo1_tree)\n\n#b.2) North plot\nendo2_ASV=as.data.frame(otu_table(endo2,taxa_are_rows = T))\nendo2_mt=as.data.frame(sample_data(endo2))\nendo2_tax=as.data.frame(tax_table(endo2))\nendo2_tree=phy_tree(endo2)\n\nendo2_edgeR = DGEList(counts = endo2_ASV, samples = endo2_mt, genes = endo2_tax)\nendo2_edgeR = calcNormFactors(endo2_edgeR)\nendo2_ASV_norm = cpm(endo2_edgeR, normalized.lib.sizes=T, log=F)\nendo2_phy_OTU_norm=otu_table(as.data.frame(endo2_ASV_norm,row.names=F), taxa_are_rows = T)\nendo2_phy_taxonomy_norm=tax_table(as.matrix(endo2_tax))\nendo2_phy_metadata_norm=sample_data(endo2_mt)\n\ntaxa_names(endo2_phy_OTU_norm)= taxa_names(endo2_phy_taxonomy_norm)\n\nidentical(rownames(endo2_ASV_norm), rownames(endo2_tax))\n\nendo2_normalized_phyloseq<-phyloseq(endo2_phy_OTU_norm,endo2_phy_taxonomy_norm,endo2_phy_metadata_norm,endo2_tree)\n```\n:::\n\n\n## 5.2 Multivariate statistical tests\n\nThe best options to test whether the groups of samples have the same dispersion is to apply the test PERMDISP2, while PERMANOVA (Permutational Multivariate Analysis of Variance Using Distance Matrices) is a test suitable to check whether the centroid (concept similar to the mean of groups of samples) of all the groups of samples to be compared is homogenus. Thus, these tests are the multivariate version of Levene's and ANOVA tests. However, both of them are based on distance matrices. That is to say, we have to calculate the distance between all sample pairs. There are many different distance or dissimilarity measures, but here we are going to use Weighted UniFrac distance, because it is based on both the phylogenetic proximity among ASVs and on their abundance.\n\nNull hypotheses of both tests: PERMANOVA H~0~: no significant differences in the centroids (mean values) of the groups of samples PERMDISPD2 H~0~: no significant differences in the dispersion of the groups of samples\n\n::: callout-important\nBe careful with unbalanced experiments. As stated [Anderson and Walsh (2013)](https://doi.org/10.1890/12-2010.1), when the groups of samples to be compared have different number of replicates (unbalanced design), heterocedasticity becomes a problem. In that cases, PERMANOVA cannot distinguish between the differences between groups of samples are due to the different dispersion or due to differences in the centroids. So, in case of unbalances designs, it is superimportant to check the dispersion of the data.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) RHIZOSPHERE\n\n#a.1) South plot\n\ndf_r1=data.frame(sample_data(rizo1_normalized_phyloseq))#extract the metadata table from the phyloseq object (NORMALIZED phyloseq!)\nwuni_r1=UniFrac(rizo1_normalized_phyloseq, weighted=T)#calculate Weighted UniFrac distances\n\nadonis_rizo1=adonis(wuni_r1~Condition*Year, data=df_r1, permutations = 9999)#apply the PERMANOVA test. Here we test the model Community structure~Plant type*Sampling year\nadonis_rizo1#check the results\n\nbetadisper_r1condition=betadisper(wuni_r1, df_r1$Condition)#check the betadispersion of each factor separately\npermutest(betadisper_r1condition)\n\nbetadisper_r1year=betadisper(wuni_r1, df_r1$Year)\npermutest(betadisper_r1year)\n\n#North plot\ndf_r2=data.frame(sample_data(rizo2_normalized_phyloseq))\nwuni_r2=UniFrac(rizo2_normalized_phyloseq, weighted=T)\nadonis_rizo2=adonis2(wuni_r2~Condition*Year, data=df_r2, permutations = 9999)\nadonis_rizo2\n\nbetadisper_r2condition=betadisper(wuni_r2, df_r2$Condition)\npermutest(betadisper_r2condition)\n\nbetadisper_r2year=betadisper(wuni_r2, df_r2$Year)\npermutest(betadisper_r2year)\n\n#b) ENDOSPHERE\n#b.1) South plot\ndf_e1=data.frame(sample_data(endo1_normalized_phyloseq))\nwuni_e1=UniFrac(endo1_normalized_phyloseq, weighted=T)\nadonis_endo1=adonis2(wuni_e1~Condition*Year, data=df_e1, permutations = 9999)\nadonis_endo1\n\nbetadisper_e1condition=betadisper(wuni_e1, df_e1$Condition)\npermutest(betadisper_e1condition)\n\nbetadisper_e1year=betadisper(wuni_e1, df_e1$Year)\npermutest(betadisper_e1year)\n\n#b.2) North plot\ndf_e2=data.frame(sample_data(endo2_normalized_phyloseq))\nwuni_e2=UniFrac(endo2_normalized_phyloseq, weighted=T)\nadonis_endo2=adonis2(wuni_e2~Condition*Year, data=df_e2, permutations = 9999)\nadonis_endo2\n\nbetadisper_e2condition=betadisper(wuni_e2, df_e2$Condition)\npermutest(betadisper_e2condition)\n\nbetadisper_e2year=betadisper(wuni_e2, df_e2$Year)\npermutest(betadisper_e2year)\n\n#Let's calculate the size of the effects:\nadonis_OmegaSq <- function(adonisOutput, partial = TRUE){\n  if(!(is(adonisOutput, \"adonis\") || is(adonisOutput, \"anova.cca\")))\n    stop(\"Input should be an adonis object\")\n  if (is(adonisOutput, \"anova.cca\")) {\n    aov_tab <- adonisOutput\n    aov_tab$MeanSqs <- aov_tab$SumOfSqs / aov_tab$Df\n    aov_tab$MeanSqs[length(aov_tab$Df)] <- NA\n  } else {\n    aov_tab <- adonisOutput$aov.tab\n  }\n  heading <- attr(aov_tab, \"heading\")\n  MS_res <- aov_tab[pmatch(\"Residual\", rownames(aov_tab)), \"MeanSqs\"]\n  SS_tot <- aov_tab[rownames(aov_tab) == \"Total\", \"SumsOfSqs\"]\n  N <- aov_tab[rownames(aov_tab) == \"Total\", \"Df\"] + 1\n  if(partial){\n    omega <- apply(aov_tab, 1, function(x) (x[\"Df\"]*(x[\"MeanSqs\"]-MS_res))/(x[\"Df\"]*x[\"MeanSqs\"]+(N-x[\"Df\"])*MS_res))\n    aov_tab$parOmegaSq <- c(omega[1:(length(omega)-2)], NA, NA)\n  } else {\n    omega <- apply(aov_tab, 1, function(x) (x[\"SumsOfSqs\"]-x[\"Df\"]*MS_res)/(SS_tot+MS_res))\n    aov_tab$OmegaSq <- c(omega[1:(length(omega)-2)], NA, NA)\n  }\n  if (is(adonisOutput, \"adonis\"))\n    cn_order <- c(\"Df\", \"SumsOfSqs\", \"MeanSqs\", \"F.Model\", \"R2\",\n                  if (partial) \"parOmegaSq\" else \"OmegaSq\", \"Pr(>F)\")\n  else\n    cn_order <- c(\"Df\", \"SumOfSqs\", \"F\", if (partial) \"parOmegaSq\" else \"OmegaSq\",\n                  \"Pr(>F)\")\n  aov_tab <- aov_tab[, cn_order]\n  attr(aov_tab, \"names\") <- cn_order\n  attr(aov_tab, \"heading\") <- heading\n  if (is(adonisOutput, \"adonis\"))\n    adonisOutput$aov.tab <- aov_tab\n  else\n    adonisOutput <- aov_tab\n  return(adonisOutput)\n}\nadonis_OmegaSq(adonis_rizo1)#apply just in that cases in which PERMANOVA gives significant results\nadonis_OmegaSq(adonis_endo1)\nadonis_OmegaSq(adonis_endo2)\n```\n:::\n\n\nNow, let's compare the structure of bacterial communities of mothers, first and second suckers:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) RHIZOSPHERE\n#a.1) South plot\nadonis_rizo1_generation=adonis2(wuni_r1~Generation, data=df_r1, permutations = 9999)\nadonis_rizo1_generation\n\nbetadisper_rizo1_generation=betadisper(wuni_r1, df_r1$Generation)\npermutest(betadisper_rizo1_generation)\n\n#a.2) North plot\nadonis_rizo2_generation=adonis2(wuni_r2~Generation, data=df_r2, permutations = 9999)\nadonis_rizo2_generation\n\nbetadisper_rizo2_generation=betadisper(wuni_r2, df_r2$Generation)\npermutest(betadisper_rizo2_generation)\n\n#b) ENDOSPHERE\n#b.1) South plot\nadonis_endo1_generation=adonis2(wuni_e1~Generation, data=df_e1, permutations = 9999)\nadonis_endo1_generation\nbetadisper_endo1_generation=betadisper(wuni_e1, df_e1$Generation)\npermutest(betadisper_endo1_generation)\n\n#b.2) North plot\nadonis_endo2_generation=adonis2(wuni_e2~Generation, data=df_e2, permutations = 9999)\nadonis_endo2_generation\nadonis_OmegaSq(adonis_endo2)#pass this function since significant differences were found\n\nbetadisper_endo2_generation=betadisper(wuni_e2, df_e2$Generation)\npermutest(betadisper_endo2_generation)\n\n#Apply the following function as post-hoc test. The following code will perform PERMANOVA between two groups of samples (A vs. B; A vs C; B vs C). It is just a wrapping-around function\npairwise.adonis(wuni_e2, phyloseq::sample_data(endo2)$Generation, p.adjust.m = \"holm\")\n```\n:::\n\n\n## 5.3 Ordination plots\n\nThere are several options to visualize the results of PERMANOVA tests, for instance, by ordination plots such as PCoA (Principal Coordinate Analysis), NMDS (Non-metric MultiDimenstional Scaling), PCA (Principal Component Analysis), among others. Theses graphs are very useful because help us to detect the differences in the structure of the microbiota among groups of samples. Both PCoA and NMDS are based on non-euclidean distances or dissimilarity measures, so we consider that they are the best options for microbiota analyses.\n\nOne the one hand, PCoA plots represent in two dimensions the arrangement of the samples in the multivariate space, although the percentage of the total variance is commonly explained by many dimensions. On the other hand, NMDS approach \"forces\" the samples to be ordinated in just two dimensions, although this forced arrangement has an associated *stress*. We tolerate stress values lower than 0.2.\n\nWe recommend calculating both ordination plots with the aim of selecting the option that best represents the results of PERMANOVA analyses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) RHIZOSPHERE\n#a.1) South plot\nNMDS_wuni_rizo1= ordinate(rizo1_normalized_phyloseq, \"NMDS\", \"wunifrac\")#indicate the ordination plot and the distance\nprint(paste(\"The stress of the NMDS based on Weighted Unifrac is:\", NMDS_wuni_rizo1$stress))#this shows the stress of the NMDS\n\nPCOA_wuni_rizo1 = ordinate(rizo1_normalized_phyloseq, \"PCoA\", \"wunifrac\")\npeso_r1w=PCOA_wuni_rizo1$values$Relative_eig[1:2]\npeso_r1w #This shows the percentage of the total variance explained by just the first and second axes\n\n#a.2) North plot\nNMDS_wuni_rizo2= ordinate(rizo2_normalized_phyloseq, \"NMDS\", \"wunifrac\")#indicate the ordination plot and the distance\nprint(paste(\"The stress of the NMDS based on Weighted Unifrac is:\", NMDS_wuni_rizo2$stress))#this shows the stress of the NMDS\n\nPCOA_wuni_rizo2 = ordinate(rizo2_normalized_phyloseq, \"PCoA\", \"wunifrac\")\npeso_r2w=PCOA_wuni_rizo2$values$Relative_eig[1:2]\npeso_r2w #This shows the percentage of the total variance explained by just the first and second axes\n\n#b) ENDOSPHERE\n#b.1) South plot\nNMDS_wuni_endo1= ordinate(endo1_normalized_phyloseq, \"NMDS\", \"wunifrac\")\nprint(paste(\"The stress of the NMDS based on Weighted Unifrac is:\", NMDS_wuni_endo1$stress))\n\nPCOA_wuni_endo1 = ordinate(endo1_normalized_phyloseq, \"PCoA\", \"wunifrac\")\npeso_e1w=PCOA_wuni_endo1$values$Relative_eig[1:2]\npeso_e1w\n\n#b.2) North plot\nNMDS_wuni_endo2= ordinate(endo2_normalized_phyloseq, \"NMDS\", \"wunifrac\")\nprint(paste(\"The stress of the NMDS based on Weighted Unifrac is:\", NMDS_wuni_endo2$stress))\n\nPCOA_wuni_endo2 = ordinate(endo2_normalized_phyloseq, \"PCoA\", \"wunifrac\")\npeso_e2w=PCOA_wuni_endo1$values$Relative_eig[1:2]\npeso_e2w\n```\n:::\n\n\nOnce these values of stress and the weight of the axes are obtained, we should choose which option is the most suitable for our dataset. Although you can also use both method in your research paper. In this case, we selected PCoA plots because we obtained relatively high values of NMDS stress (\\>0.13). It is easy to understand: our data are probably multidimensional are complex due to the high diversity and richness of the data, so it is easy to have high stress when forcing the data to fit just into two dimensions.\n\nLet's obtain the plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a)RHIZOSPHERE\n#a.1) South plot\np_rizo1_pcoa= plot_ordination(rizo1_normalized_phyloseq, PCOA_wuni_rizo1,type= \"samples\", color= \"Condition\", shape = \"Year\")+#to color by \"Condition\" and shape by \"Year\"\n  geom_hline(aes(yintercept = c(0.00)), lty=2, colour=\"grey\")+\n  geom_vline(aes(xintercept = c(0.00)), lty=2, colour=\"grey\")+\n  geom_point(alpha = 4, size = 1.5)+\n  labs(x=paste0(\"Axis 1 (\",round(peso_r1w[1]*100,digits = 2),\"%)\"), #write the weight of each axis with two decimals\n       y=paste0(\"Axis 2 (\",round(peso_r1w[2]*100,digits = 2),\"%)\"))+\n  scale_color_manual(values = c(\"Immature\"=\"cornflowerblue\",\"Mature\"=\"darkgreen\"),\n                     breaks=c(\"Immature\", \"Mature\"),\n                     labels=c(\"Suckers\", \"Mothers\"))+\n  scale_shape_manual(values=c(\"A\"=16, \"B\"=17),\n                     breaks=c(\"A\", \"B\"),\n                     labels=c(\"2022\", \"2023\"))+\n  theme_bw()+\n  theme(legend.key=element_blank(),\n        legend.title.align = 0,\n        legend.title = element_text(face=\"bold\",size=5),\n        legend.title=element_blank(),\n        legend.text.align = 0,\n        axis.text = element_text(size=7),\n        axis.title = element_text(size = 5),\n        plot.title = element_text(hjust=0.5, face=\"bold\",size=5),\n        legend.text = element_text(size = 5),\n        legend.position = \"right\") + \n  \n  ggtitle(\"South Plot\")+\n  guides(color=guide_legend(ncol=2))+\n  guides(shape=guide_legend(ncol = 2))+\n  scale_x_continuous(limits = c(-0.2, 0.25))+\n  scale_y_continuous(limits = c(-0.15, 0.1))\nx11()\np_rizo1_pcoa\n\n#a.2) North plot\np_rizo2_pcoa= plot_ordination(rizo2_normalized_phyloseq, PCOA_wuni_rizo2,type= \"samples\", color= \"Condition\", shape = \"Year\")+\n  geom_hline(aes(yintercept = c(0.00)), lty=2, colour=\"grey\")+\n  geom_vline(aes(xintercept = c(0.00)), lty=2, colour=\"grey\")+\n  geom_point(alpha = 4, size = 1.5)+\n  labs(x=paste0(\"Axis 1 (\",round(peso_r2w[1]*100,digits = 2),\"%)\"), \n       y=paste0(\"Axis 2 (\",round(peso_r2w[2]*100,digits = 2),\"%)\"))+\n  scale_color_manual(values = c(\"Immature\"=\"magenta\",\"Mature\"=\"darkolivegreen2\"),\n                     breaks=c(\"Immature\", \"Mature\"),\n                     labels=c(\"Suckers\", \"Mothers\"))+\n  scale_shape_manual(values=c(\"A\"=16, \"B\"=17),\n                     breaks=c(\"A\", \"B\"),\n                     labels=c(\"2022\", \"2023\"))+\n  theme_bw()+\n  theme(legend.key=element_blank(),\n        legend.title.align = 0,\n        legend.title = element_text(face=\"bold\",size=5),\n        legend.title=element_blank(),\n        legend.text.align = 0,\n        axis.text = element_text(size=7),\n        axis.title = element_text(size = 5),\n        plot.title = element_text(hjust=0.5, face=\"bold\",size=5),\n        legend.text = element_text(size = 5),\n        legend.position = \"right\") + \n  \n  ggtitle(\"North Plot\")+\n  guides(color=guide_legend(ncol=2))+\n  guides(shape=guide_legend(ncol = 2))+\n  scale_x_continuous(limits = c(-0.2, 0.2))+\n  scale_y_continuous(limits = c(-0.1, 0.15))\n\nx11()\np_rizo2_pcoa\n\n#b) ENDOSPHERE\n#b.1) South plot\np_endo1_pcoa= plot_ordination(endo1_normalized_phyloseq, PCOA_wuni_endo1,type= \"samples\", color= \"Condition\", shape = \"Year\")+\n  geom_hline(aes(yintercept = c(0.00)), lty=2, colour=\"grey\")+\n  geom_vline(aes(xintercept = c(0.00)), lty=2, colour=\"grey\")+\n  geom_point(alpha = 4, size = 1.5)+\n  labs(x=paste0(\"Axis 1 (\",round(peso_e1w[1]*100,digits = 2),\"%)\"), \n          y=paste0(\"Axis 2 (\",round(peso_e1w[2]*100,digits = 2),\"%)\"))+\n  scale_color_manual(values = c(\"Immature\"=\"#00CCFF\",\"Mature\"=\"green\"),\n                       breaks=c(\"Immature\", \"Mature\"),\n                       labels=c(\"Suckers\", \"Mothers\"))+\n  scale_shape_manual(values=c(\"A\"=16, \"B\"=17),\n                                breaks=c(\"A\", \"B\"),\n                                labels=c(\"2022\", \"2023\"))+\n  theme_bw()+\n  theme(legend.key=element_blank(),\n          legend.title.align = 0,\n          legend.title = element_text(face=\"bold\",size=5),\n        legend.title=element_blank(),\n          legend.text.align = 0,\n          axis.text = element_text(size=7),\n          axis.title = element_text(size = 5),\n          plot.title = element_text(hjust=0.5, face=\"bold\",size=5),\n          legend.text = element_text(size = 5),\n          legend.position = \"right\") + \n  \n  ggtitle(\"South Plot\")+\n  guides(color=guide_legend(ncol=2))+\n  guides(shape=guide_legend(ncol = 2))+\n  scale_x_continuous(limits = c(-0.4, 0.25))+\n  scale_y_continuous(limits = c(-0.2, 0.2))\n\nx11()\np_endo1_pcoa\n\n#b.2) North plot\np_endo2_pcoa= plot_ordination(endo2_normalized_phyloseq, PCOA_wuni_endo2,type= \"samples\", color= \"Condition\", shape = \"Year\")+\n  geom_hline(aes(yintercept = c(0.00)), lty=2, colour=\"grey\")+\n  geom_vline(aes(xintercept = c(0.00)), lty=2, colour=\"grey\")+\n  geom_point(alpha = 4, size = 1.5)+\n  labs(x=paste0(\"Axis 1 (\",round(peso_e2w[1]*100,digits = 2),\"%)\"), \n       y=paste0(\"Axis 2 (\",round(peso_e2w[2]*100,digits = 2),\"%)\"))+\n  scale_color_manual(values = c(\"Immature\"=\"blueviolet\",\"Mature\"=\"aquamarine\"),\n                     breaks=c(\"Immature\", \"Mature\"),\n                     labels=c(\"Suckers\", \"Mothers\"))+\n  scale_shape_manual(values=c(\"A\"=16, \"B\"=17),\n                     breaks=c(\"A\", \"B\"),\n                     labels=c(\"2022\", \"2023\"))+\n  theme_bw()+\n  theme(legend.key=element_blank(),\n        legend.title.align = 0,\n        legend.title = element_text(face=\"bold\",size=5),\n        legend.title=element_blank(),\n        legend.text.align = 0,\n        axis.text = element_text(size=7),\n        axis.title = element_text(size = 5),\n        plot.title = element_text(hjust=0.5, face=\"bold\",size=5),\n        legend.text = element_text(size = 5),\n        legend.position = \"right\") + \n  ggtitle(\"North Plot\")+\n  guides(color=guide_legend(ncol=2))+\n  guides(shape=guide_legend(ncol = 2))+\n  scale_x_continuous(limits = c(-0.3, 0.3))+\n  scale_y_continuous(limits = c(-0.2, 0.3))\n\nx11()\np_endo2_pcoa\n```\n:::\n\n\n# 6. Taxonomical profiles\n\nWe already know that there are differences in the structure of bacterial communities in some case, however, we still do not know which taxa are the responsible of that differences. So, let's analyze the taxonomical profiles. Fistly, we have to obtain the relative abundance of each ASV:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphy_data_relabun=transform_sample_counts(phy_total, function(x){x/sum(x)}*100)\ncolSums(otu_table(phy_data_relabun))#check that all sum 100%\n```\n:::\n\n\n## 6.1 Phylum level\n\n### 6.1.1. Obtaining tables with the relative abundance and standard deviation values\n\nWe are going to obtain the relative abundance of each phylum detected in our samples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphylum_relabun=tax_glom(phy_data_relabun, taxrank = \"Phylum\")#aglomerate at Phylum level\ncolSums(otu_table(phylum_relabun)) #check that the relative abundance sums 100% in all cases\n\n#Now we are going to create a table with the relative abundance of each taxa in each replicate so that we can work on it, for instance, in Excel\na=as.data.frame(otu_table(phylum_relabun))\naa=cbind(tax_table(phylum_relabun),a)\nidentical(rownames(a),rownames(aa))#it should give \"TRUE\"\nwrite.table(data.frame(\"TAXA\"=rownames(aa),aa),file=\"abundrel_phylum_porReplicas.txt\", sep=\"\\t\",row.names =F)\n\n#Another table, with the mean and standard deviation of the relative abundance of each phylum:\ntable_phylum = a[,] %>% t() %>% as.data.frame()\ntax_phylum=tax_table(phylum_relabun)\n\nphylum_media=aggregate(table_phylum, by=list(as.data.frame(sample_data(phylum_relabun))$Fusion), FUN=mean)%>% column_to_rownames(\"Group.1\") %>% t()#calculate the mean values of the relative abundance of each phylum in each group of samples \n\nphylum_sd =aggregate(table_phylum, by=list(as.data.frame(sample_data(phylum_relabun))$Fusion), FUN=sd)%>% column_to_rownames(\"Group.1\")  %>% t()  %>% \n  as.data.frame() %>% rename_with(.fn= ~paste0(colnames(phylum_media), \"_SD\"))#calculate the standard deviation of the relative abundance of each phylum in each group of samples \n\nphylum_media_sd=merge(tax_phylum, phylum_media, by=0) %>%column_to_rownames(\"Row.names\") %>%\n  merge(phylum_sd, by=0) %>% column_to_rownames(\"Row.names\")#bind mean and sd values into one table\n\nwrite.table(data.frame(\"TAXA\"=rownames(phylum_media_sd),phylum_media_sd), file=\"abundrel_media_sd_phylum.txt\", sep=\"\\t\",row.names =F)\n```\n:::\n\n\n### 6.1.2. Plotting\n\nWe are going to make a stacked bars plot, just indicating the most abundant phyla\n\nFirstly, we have to prepare the data and modify the table so that we can obtain tables suitable for the plotting with the package ggplot2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_melt_phylum = psmelt(physeq = phylum_relabun) #transform the phyloseq object into a dataframe in which the abundance of each phylum is in rows\ncolnames(df_melt_phylum) # check the content of the dataframe\n\n#Here we aggregate the data by the factor we indicate in the argument \"by\".\ndf_melt_aggreg1 = aggregate(df_melt_phylum$Abundance, \n                            by=list(Group=df_melt_phylum$Fusion, \n                                    Sample=df_melt_phylum$Sample,Phylum=df_melt_phylum$Phylum,\n                                                              Compartment=df_melt_phylum$Compartment,\n                                    Plot=df_melt_phylum$Plot, Year=df_melt_phylum$Year, Condition=df_melt_phylum$Condition), FUN=sum)#it sums the abundance of each phylum in all the replicates corresponding to the same group of samples\ncolnames(df_melt_aggreg1)=c(\"Group\", \"Sample\", \"Phylum\",\"Compartment\",\"Plot\",\"Year\",\"Condition\",\"Abundance\")#rename the columns\ncolnames(df_melt_aggreg1)\n\ndf_melt_aggreg_mean = aggregate(df_melt_aggreg1$Abundance, by=list(Group=df_melt_aggreg1$Group, \n                                                                   Phylum=df_melt_aggreg1$Phylum,\n                                                                   Compartment=df_melt_aggreg1$Compartment,\n                                                                   Plot=df_melt_aggreg1$Plot, Year=df_melt_aggreg1$Year,Condition=df_melt_aggreg1$Condition), FUN=mean)#now, it makes the mean relative abundance of each phylum in each group of samples\ncolnames(df_melt_aggreg_mean)<-c(\"Group\", \"Phylum\",\"Compartment\", \"Plot\",\"Year\",\"Condition\",\"Abundance\")\ncolnames(df_melt_aggreg_mean)\n\n\n#repeat the same with the standard deviation\ndf_melt_aggreg_sd=aggregate(df_melt_aggreg1$Abundance, by=list(Group=df_melt_aggreg1$Group, \n                                                               Phylum=df_melt_aggreg1$Phylum,\n                                                               Compartment=df_melt_aggreg1$Compartment,\n                                                               Plot=df_melt_aggreg1$Plot, Year=df_melt_aggreg1$Year,Condition=df_melt_aggreg1$Condition), FUN=sd)\ncolnames(df_melt_aggreg_sd)=c(\"Group\", \"Phylum\",\"Compartment\",\"Plot\",\"Year\",\"Condition\",\"sd\")\n\n\n#check whether the groups of samples and the name of the phyla is the same in both mean and sd table\nall(df_melt_aggreg_mean$Group==df_melt_aggreg_sd$Group)#it should give \"TRUE\"\nall(df_melt_aggreg_mean$Phylum==df_melt_aggreg_sd$Phylum)\n\n#Now, add the sd values in the table of mean values\ndf_melt_aggreg_mean$sd=df_melt_aggreg_sd$sd \n\nmedia_sd_phylum_todos=df_melt_aggreg_mean\n```\n:::\n\n\nNow, we are ready to plot the mean relative abundances. We want to order the phyla by ascending relative abundance, keeping the unclassified and minor phyla in the upper part of the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) RHIZOSPHERE\n#a.1) South plot\nmedia_sd_phylum_Rizo=media_sd_phylum_todos[media_sd_phylum_todos[,\"Compartment\"] == \"Rhizosphere\",]#subset the dataset\nmedia_sd_phylum_Rizo1=media_sd_phylum_Rizo[media_sd_phylum_Rizo[,\"Plot\"] == \"Plot1\",]\n\n#aggregate all the phyla that were not classified\nmedia_sd_phylum_Rizo1$Phylum=as.character(media_sd_phylum_Rizo1$Phylum)\nunclassified_rizo1=media_sd_phylum_Rizo1[media_sd_phylum_Rizo1[,\"Phylum\"] == \"unclassified\",] #save them into a new variable\nmedia_sd_phylum_Rizo1=media_sd_phylum_Rizo1[media_sd_phylum_Rizo1[,\"Phylum\"] != \"unclassified\",] #remove the unclassified phyla from the original dataset\n\n#aggregate all the phyla that account less than 1% into an artificial group named \"Other phyla <1%\"\nmedia_sd_phylum_Rizo1$Phylum[media_sd_phylum_Rizo1$Abundance <= 1.0] = \"Other phyla (<1%)\"\nmedia_sd_phylum_Rizo1$Phylum=as.factor(media_sd_phylum_Rizo1$Phylum)\nothers_rizo1=media_sd_phylum_Rizo1[media_sd_phylum_Rizo1[,\"Phylum\"] == \"Other phyla (<1%)\",]#save the \"other phyla\" into a new variable\nmedia_sd_phylum_Rizo1=media_sd_phylum_Rizo1[media_sd_phylum_Rizo1[,\"Phylum\"] != \"Other phyla (<1%)\",]#remove them from the original dataset\n\n#Now, the minor and unclassified phyla are not included in the original dataset, so let's order by abundance the remaining phyla\nordenado_rizo1=media_sd_phylum_Rizo1[order(media_sd_phylum_Rizo1$Abundance, decreasing=T),] #order by relative abundance\nordenado_rizo1=rbind(ordenado_rizo1,others_rizo1,unclassified_rizo1)#now add the minor phyla and the unclassified\n\ngroup_label_rizo1=c(\"Mature\",\"Immature\", \"Mature\",\"Immature\")#set the labels\nlevels_rizo1=c(\"A_Plot1_Mature_Rhizosphere\",\"A_Plot1_Immature_Rhizosphere\",\"B_Plot1_Mature_Rhizosphere\",\"B_Plot1_Immature_Rhizosphere\")#set the levels of the graph\nlimits_rizo1=c(\"A_Plot1_Mature_Rhizosphere\",\"A_Plot1_Immature_Rhizosphere\",\"B_Plot1_Mature_Rhizosphere\",\"B_Plot1_Immature_Rhizosphere\")#set the limits of the graph\n\nphyl_name_ordered_rizo1=as.vector(ordenado_rizo1$Phylum)\nnombres_unicos_rizo1=unique(phyl_name_ordered_rizo1)#get the levels (=the names of the phyla )of the factor \"Phylum\", and show them just once regardless of their abundance and prevalence)\nordenado_rizo1$Phylum=reorder.factor(ordenado_rizo1$Phylum,new.order=rev(nombres_unicos_rizo1))#order the name of the phyla\nlab_unicos_rizo1=nombres_unicos_rizo1 \n\nsorted_labels_ggplot_rizo1 <- sapply(lab_unicos_rizo1,\n                                    function(x) if (x == \"Other phyla (<1%)\"|x == \"unclassified\"|x == \"Other genera (<1%)\")\n                                    {parse(text=paste0(\"'\", as.character(x), \"'\"))} else {parse(text = paste0(\"italic('\",as.character(x), \"')\"))})\n#this function helps us to write the name of the phyla (and genera) in italics and the name of the minor phyla and unclassified without italics\n\ncolores_rizo1 = c(\"#0099FF\", \"#9933FF\",\"#00CC00\",\"red\", \"brown\",\"#FF00FF\",\"darkolivegreen\",\n                \"#FFFF00\",\"grey\", \"black\")#choose the colors of specific phyla\n\nlength(lab_unicos_rizo1)==length(colores_rizo1)  #in case of \"FALSE\", check the number of phyla and the number of colors. Establish as many colors as number of phyla (including the groups of minor and unclassified phyla)\nlength(lab_unicos_rizo1)\nlength(colores_rizo1)\n\ntitulo_plot_rizo1=\"Plot 1\"\n\np_rizo_1_phylum=ggplot(ordenado_rizo1, aes(x=Group, y=Abundance, fill=Phylum, order=Phylum)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=colores_rizo1,\n                    labels=sorted_labels_ggplot_rizo1,\n                    breaks=nombres_unicos_rizo1)+\n  labs(y=\"Mean relative abundance (%)\", x=NULL, fill=\"Phylum\",title=titulo_plot_rizo1)+\n  guides(fill = guide_legend(reverse = TRUE))+\n scale_x_discrete(limits=limits_rizo1,labels=group_label_rizo1,\n                  breaks=levels_rizo1)+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 100))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0) \n\nx11()\np_rizo_1_phylum\n\n#a.2) North plot\nmedia_sd_phylum_Rizo=media_sd_phylum_todos[media_sd_phylum_todos[,\"Compartment\"] == \"Rhizosphere\",]\nmedia_sd_phylum_Rizo2=media_sd_phylum_Rizo[media_sd_phylum_Rizo[,\"Plot\"] == \"Plot2\",]\n\nmedia_sd_phylum_Rizo2$Phylum=as.character(media_sd_phylum_Rizo2$Phylum)\nunclassified_rizo2=media_sd_phylum_Rizo2[media_sd_phylum_Rizo2[,\"Phylum\"] == \"unclassified\",] \nmedia_sd_phylum_Rizo2=media_sd_phylum_Rizo2[media_sd_phylum_Rizo2[,\"Phylum\"] != \"unclassified\",] \n\nmedia_sd_phylum_Rizo2$Phylum[media_sd_phylum_Rizo2$Abundance <= 1.0] = \"Other phyla (<1%)\" \nmedia_sd_phylum_Rizo2$Phylum=as.factor(media_sd_phylum_Rizo2$Phylum)\nothers_rizo2=media_sd_phylum_Rizo2[media_sd_phylum_Rizo2[,\"Phylum\"] == \"Other phyla (<1%)\",]\nmedia_sd_phylum_Rizo2=media_sd_phylum_Rizo2[media_sd_phylum_Rizo2[,\"Phylum\"] != \"Other phyla (<1%)\",]\n\nordenado_rizo2=media_sd_phylum_Rizo2[order(media_sd_phylum_Rizo2$Abundance, decreasing=T),] \nordenado_rizo2=rbind(ordenado_rizo2,others_rizo2,unclassified_rizo2)\n\ngroup_label_rizo2=c(\"Mature\",\"Immature\", \"Mature\",\"Immature\")\nlevels_rizo2=c(\"A_Plot2_Mature_Rhizosphere\",\"A_Plot2_Immature_Rhizosphere\",\"B_Plot2_Mature_Rhizosphere\",\n               \"B_Plot2_Immature_Rhizosphere\")\nlimits_rizo2=c(\"A_Plot2_Mature_Rhizosphere\",\"A_Plot2_Immature_Rhizosphere\",\"B_Plot2_Mature_Rhizosphere\",\n               \"B_Plot2_Immature_Rhizosphere\")\n\nphyl_name_ordered_rizo2=as.vector(ordenado_rizo2$Phylum)\nnombres_unicos_rizo2=unique(phyl_name_ordered_rizo2)\n\nordenado_rizo2$Phylum=reorder.factor(ordenado_rizo2$Phylum,new.order=rev(nombres_unicos_rizo2))\nlab_unicos_rizo2=nombres_unicos_rizo2\n\nsorted_labels_ggplot_rizo2 <- sapply(lab_unicos_rizo2,\n                                     function(x) if (x == \"Other phyla (<1%)\"|x == \"unclassified\"|x == \"Other genera (<1%)\")\n                                     {parse(text=paste0(\"'\", as.character(x), \"'\"))} else {parse(text = paste0(\"italic('\",as.character(x), \"')\"))})\n\n\ncolores_rizo2 = c(\"#0099FF\", \"#00CC00\", \"#9933FF\",\"red\",\"#FF00FF\",\n                  \"brown\",\"#FFFF00\",\"blue\",\"grey\", \"black\")\n\nlength(lab_unicos_rizo2)==length(colores_rizo2) \nlength(lab_unicos_rizo2)\nlength(colores_rizo2)\n\ntitulo_plot_rizo2=\"Plot 2\"\n\np_rizo_2_phylum=ggplot(ordenado_rizo2, aes(x=Group, y=Abundance, fill=Phylum, order=Phylum)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=colores_rizo2,\n                    labels=sorted_labels_ggplot_rizo2,\n                    breaks=nombres_unicos_rizo2)+\n  labs(y=\"Mean relative abundance (%)\", x=NULL, fill=\"Phylum\",title=titulo_plot_rizo2)+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=limits_rizo2,labels=group_label_rizo2,\n                   breaks=levels_rizo2)+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 100))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0) \n\nx11()\np_rizo_2_phylum\n\n#b) ENDOSPHERE\nmedia_sd_phylum_Endo=media_sd_phylum_todos[media_sd_phylum_todos[,\"Compartment\"] == \"Endosphere\",]\n\n#b.1) South plot\nmedia_sd_phylum_Endo1=media_sd_phylum_Endo[media_sd_phylum_Endo[,\"Plot\"] == \"Plot1\",]\n\nmedia_sd_phylum_Endo1$Phylum=as.character(media_sd_phylum_Endo1$Phylum)\n\nunclassified_endo1=media_sd_phylum_Endo1[media_sd_phylum_Endo1[,\"Phylum\"] == \"unclassified\",] \nmedia_sd_phylum_Endo1=media_sd_phylum_Endo1[media_sd_phylum_Endo1[,\"Phylum\"] != \"unclassified\",] \n\nmedia_sd_phylum_Endo1$Phylum[media_sd_phylum_Endo1$Abundance <= 1.0] = \"Other phyla (<1%)\" \nmedia_sd_phylum_Endo1$Phylum=as.factor(media_sd_phylum_Endo1$Phylum)\n\nothers_endo1=media_sd_phylum_Endo1[media_sd_phylum_Endo1[,\"Phylum\"] == \"Other phyla (<1%)\",]\nmedia_sd_phylum_Endo1=media_sd_phylum_Endo1[media_sd_phylum_Endo1[,\"Phylum\"] != \"Other phyla (<1%)\",]\n\nordenado_endo1=media_sd_phylum_Endo1[order(media_sd_phylum_Endo1$Abundance, decreasing=T),] \nordenado_endo1=rbind(ordenado_endo1,others_endo1,unclassified_endo1)\n\ngroup_label_endo1=c(\"Mothers\",\"Suckers\", \"Mothers\",\"Suckers\")\nlevels_endo1=c(\"A_Plot1_Mature_Endosphere\",\"A_Plot1_Immature_Endosphere\",\"B_Plot1_Mature_Endosphere\",\"B_Plot1_Immature_Endosphere\")\nlimits_endo1=c(\"A_Plot1_Mature_Endosphere\",\"A_Plot1_Immature_Endosphere\",\"B_Plot1_Mature_Endosphere\",\"B_Plot1_Immature_Endosphere\")\n\nphyl_name_ordered_endo1=as.vector(ordenado_endo1$Phylum)\nnombres_unicos_endo1=unique(phyl_name_ordered_endo1)\n\nordenado_endo1$Phylum=reorder.factor(ordenado_endo1$Phylum,new.order=rev(nombres_unicos_endo1))\nlab_unicos_endo1=nombres_unicos_endo1 \n\nsorted_labels_ggplot_endo1 <- sapply(lab_unicos_endo1,\n                                    function(x) if (x == \"Other phyla (<1%)\"|x == \"unclassified\"|x == \"Other genera (<1%)\")\n                                    {parse(text=paste0(\"'\", as.character(x), \"'\"))} else {parse(text = paste0(\"italic('\",as.character(x), \"')\"))})\n\ncolores_endo1 = c(\"#0099FF\",\"#00CC00\",\"#9933FF\",\"brown\",\"yellow\",\"#00FFFF\",\"red\", \"grey\",\"black\")\n\nlength(lab_unicos_endo1)==length(colores_endo1) \nlength(lab_unicos_endo1)\nlength(colores_endo1)\n\ntitulo_plot_endo1=\"South plot\"\n\np_endo1_phylum=ggplot(ordenado_endo1, aes(x=Group, y=Abundance, fill=Phylum, order=Phylum)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=colores_endo1,\n                    labels=sorted_labels_ggplot_endo1,\n                    breaks=nombres_unicos_endo1)+\n  labs(y=\"Mean relative abundance (%)\", x=NULL, fill=\"Phylum\",title=titulo_plot_endo1)+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=limits_endo1,labels=group_label_endo1,\n                   breaks=levels_endo1)+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 100))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0) \n\nx11()\np_endo1_phylum\n\n#b.2) North plot\nmedia_sd_phylum_Endo2=media_sd_phylum_Endo[media_sd_phylum_Endo[,\"Plot\"] == \"Plot2\",]\n\nmedia_sd_phylum_Endo2$Phylum=as.character(media_sd_phylum_Endo2$Phylum)\nunclassified_endo2=media_sd_phylum_Endo2[media_sd_phylum_Endo2[,\"Phylum\"] == \"unclassified\",] \nmedia_sd_phylum_Endo2=media_sd_phylum_Endo2[media_sd_phylum_Endo2[,\"Phylum\"] != \"unclassified\",]\n\nmedia_sd_phylum_Endo2$Phylum[media_sd_phylum_Endo2$Abundance <= 1.0] = \"Other phyla (<1%)\" \nmedia_sd_phylum_Endo2$Phylum=as.factor(media_sd_phylum_Endo2$Phylum)\nothers_endo2=media_sd_phylum_Endo2[media_sd_phylum_Endo2[,\"Phylum\"] == \"Other phyla (<1%)\",]\nmedia_sd_phylum_Endo2=media_sd_phylum_Endo2[media_sd_phylum_Endo2[,\"Phylum\"] != \"Other phyla (<1%)\",]\n\nordenado_endo2=media_sd_phylum_Endo2[order(media_sd_phylum_Endo2$Abundance, decreasing=T),]\nordenado_endo2=rbind(ordenado_endo2,others_endo2,unclassified_endo2)\n\ngroup_label_endo2=c(\"Mothers\",\"Suckers\", \"Mothers\",\"Suckers\")\nlevels_endo2=c(\"A_Plot2_Mature_Endosphere\",\"A_Plot2_Immature_Endosphere\",\"B_Plot2_Mature_Endosphere\",\"B_Plot2_Immature_Endosphere\")\nlimits_endo2=c(\"A_Plot2_Mature_Endosphere\",\"A_Plot2_Immature_Endosphere\",\"B_Plot2_Mature_Endosphere\",\"B_Plot2_Immature_Endosphere\")\n\nphyl_name_ordered_endo2=as.vector(ordenado_endo2$Phylum)\nnombres_unicos_endo2=unique(phyl_name_ordered_endo2)\n\nordenado_endo2$Phylum=reorder.factor(ordenado_endo2$Phylum,new.order=rev(nombres_unicos_endo2))\nlab_unicos_endo2=nombres_unicos_endo2 \n\nsorted_labels_ggplot_endo2 <- sapply(lab_unicos_endo2,\n                                     function(x) if (x == \"Other phyla (<1%)\"|x == \"unclassified\"|x == \"Other genera (<1%)\")\n                                     {parse(text=paste0(\"'\", as.character(x), \"'\"))} else {parse(text = paste0(\"italic('\",as.character(x), \"')\"))})\n\ncolores_endo2 = c(\"#0099FF\",\"#00CC00\",\"brown\",\"#9933FF\",\"#00FFFF\",\"yellow\",\"grey\",\"black\")\n\nlength(lab_unicos_endo2)==length(colores_endo2) \nlength(lab_unicos_endo2)\nlength(colores_endo2)\n\ntitulo_plot_endo2=\"North plot\"\n\np_endo2_phylum=ggplot(ordenado_endo2, aes(x=Group, y=Abundance, fill=Phylum, order=Phylum)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=colores_endo2,\n                    labels=sorted_labels_ggplot_endo2,\n                    breaks=nombres_unicos_endo2)+\n  labs(y=\"Mean relative abundance (%)\", x=NULL, fill=\"Phylum\",title=titulo_plot_endo2)+\n  guides(fill = guide_legend(reverse = TRUE))+#sirve para cambiar el orden de la leyenda\n  scale_x_discrete(limits=limits_endo2,labels=group_label_endo2,\n                   breaks=levels_endo2)+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 100))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)\nx11()\np_endo2_phylum\n```\n:::\n\n\n## 6.2. Genus level\n\n### 6.2.1. Obtain tables with the relative abundance and standard deviation values\n\nWe are going to obtain the relative abundance of each phylum detected in our samples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenus_relabun=tax_glom(phy_data_relabun, taxrank = \"Genus\")\ncolSums(otu_table(genus_relabun))\n\nb=as.data.frame(otu_table(genus_relabun))\nbb=cbind(tax_table(genus_relabun),b)\nidentical(rownames(b),rownames(bb))\nwrite.table(data.frame(\"TAXA\"=rownames(bb),bb),file=\"abundrel_Genero_porReplicas.txt\", sep=\"\\t\",row.names =F)\n\ntable_genus = otu_table(genus_relabun)[,] %>% t() %>% as.data.frame()\ntax_genus=tax_table(genus_relabun)\n\ngenus_media=aggregate(table_genus, by=list(as.data.frame(sample_data(genus_relabun))$Fusion), FUN=mean)%>% column_to_rownames(\"Group.1\") %>% t() \n\ngenus_sd <- aggregate(table_genus, by=list(as.data.frame(sample_data(genus_relabun))$Fusion), FUN=sd)%>% column_to_rownames(\"Group.1\")  %>% t()  %>% \n  as.data.frame() %>% rename_with(.fn= ~paste0(colnames(genus_media), \"_SD\"))\n\ngenus_media_sd=merge(tax_genus, genus_media, by=0) %>%column_to_rownames(\"Row.names\") %>%\n  merge(genus_sd, by=0) %>% column_to_rownames(\"Row.names\")\ncolSums(genus_media_sd[,8:ncol(genus_media_sd)])\ngenus_media_sd$ASV_names=row.names(genus_media_sd)\n\nwrite.table(data.frame(\"TAXA\"=rownames(genus_media_sd),genus_media_sd), file=\"abundrel_media_sd_genus.txt\", sep=\"\\t\",row.names =F)\n```\n:::\n\n\n### 6.2.2. Plotting\n\nWe are going to make a stacked bars plot, just indicating the most abundant genera\n\nFirstly, we have to prepare the data and modify the table so that we can obtain tables suitable for the plotting with the package ggplot2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_melt_genus = psmelt(physeq = genus_relabun) \ncolnames(df_melt_genus) \n\ndf_melt_aggreg2 = aggregate(df_melt_genus$Abundance, \n                            by=list(Group=df_melt_genus$Fusion, \n                                    Sample=df_melt_genus$Sample,Genus=df_melt_genus$Genus,\n                                    Compartment=df_melt_genus$Compartment,\n                                    Plot=df_melt_genus$Plot, Year=df_melt_genus$Year, Condition=df_melt_genus$Condition), FUN=sum)\ncolnames(df_melt_aggreg2)=c(\"Group\", \"Sample\", \"Genus\",\"Compartment\",\"Plot\",\"Year\",\"Condition\",\"Abundance\")\ncolnames(df_melt_aggreg2) \n\ndf_melt_aggreg_mean = aggregate(df_melt_aggreg2$Abundance, by=list(Group=df_melt_aggreg2$Group, \n                                                                   Genus=df_melt_aggreg2$Genus,\n                                                                   Compartment=df_melt_aggreg2$Compartment,\n                                                                   Plot=df_melt_aggreg2$Plot, Year=df_melt_aggreg2$Year,Condition=df_melt_aggreg2$Condition), FUN=mean)\ncolnames(df_melt_aggreg_mean)<-c(\"Group\", \"Genus\",\"Compartment\", \"Plot\",\"Year\",\"Condition\",\"Abundance\")\ncolnames(df_melt_aggreg_mean)\n\ndf_melt_aggreg_sd=aggregate(df_melt_aggreg2$Abundance, by=list(Group=df_melt_aggreg2$Group, \n                                                               Genus=df_melt_aggreg2$Genus,\n                                                               Compartment=df_melt_aggreg2$Compartment,\n                                                               Plot=df_melt_aggreg2$Plot, Year=df_melt_aggreg2$Year,Condition=df_melt_aggreg2$Condition), FUN=sd)\ncolnames(df_melt_aggreg_sd)=c(\"Group\", \"Genus\",\"Compartment\",\"Plot\",\"Year\",\"Condition\",\"sd\")\n\nall(df_melt_aggreg_mean$Group==df_melt_aggreg_sd$Group)\nall(df_melt_aggreg_mean$Genus==df_melt_aggreg_sd$Genus)\n\ndf_melt_aggreg_mean$sd=df_melt_aggreg_sd$sd \nmedia_sd_genus_todos=df_melt_aggreg_mean\n```\n:::\n\n\nNow, we are ready to plot the mean relative abundances. We want to order the genera by ascending relative abundance, keeping the unclassified and minor genera in the upper part of the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) RHIZOSPHERE\nmedia_sd_genus_rizo=media_sd_genus_todos[media_sd_genus_todos[,\"Compartment\"] == \"Rhizosphere\",]\n\n#a.1) South plot\nmedia_sd_genus_rizo1=media_sd_genus_rizo[media_sd_genus_rizo[,\"Plot\"] == \"Plot1\",]\n\nmedia_sd_genus_rizo1$Genus=as.character(media_sd_genus_rizo1$Genus)\nunclassified_r1=media_sd_genus_rizo1[media_sd_genus_rizo1[,\"Genus\"] == \"unclassified\",] \nmedia_sd_genus_rizo1=media_sd_genus_rizo1[media_sd_genus_rizo1[,\"Genus\"] != \"unclassified\",] \n\nmedia_sd_genus_rizo1$Genus[media_sd_genus_rizo1$Abundance <= 2] = \"Other genera (<2%)\" \nmedia_sd_genus_rizo1$Genus=as.factor(media_sd_genus_rizo1$Genus)\n\nothers_r1=media_sd_genus_rizo1[media_sd_genus_rizo1[,\"Genus\"] == \"Other genera (<2%)\",]\nmedia_sd_genus_rizo1=media_sd_genus_rizo1[media_sd_genus_rizo1[,\"Genus\"] != \"Other genera (<2%)\",]\n\nordenado_r1=media_sd_genus_rizo1[order(media_sd_genus_rizo1$Abundance, decreasing=T),] \nordenado_r1=rbind(ordenado_r1,others_r1,unclassified_r1)\n\ngroup_label_r1=c(\"M\",\"S\", \"M\",\"S\")\nlevels_r1=c(\"A_Plot1_Mature_Rhizosphere\",\"A_Plot1_Immature_Rhizosphere\",\n           \"B_Plot1_Mature_Rhizosphere\",\"B_Plot1_Immature_Rhizosphere\")\nlimits_r1=c(\"A_Plot1_Mature_Rhizosphere\",\"A_Plot1_Immature_Rhizosphere\",\n            \"B_Plot1_Mature_Rhizosphere\",\"B_Plot1_Immature_Rhizosphere\")\n\ngenus_name_ordered_r1=as.vector(ordenado_r1$Genus)\nnombres_unicos_r1=unique(genus_name_ordered_r1)\nordenado_r1$Genus=reorder.factor(ordenado_r1$Genus,new.order=rev(nombres_unicos_r1))\nlab_unicos_r1=nombres_unicos_r1 \n\nsorted_labels_ggplot_r1 <- sapply(lab_unicos_r1,\n                                  function(x) if (x == \"Other genera (<2%)\"|x == \"unclassified\"|x == \"Other genera (<2%)\")\n                                  {parse(text=paste0(\"'\", as.character(x), \"'\"))} else {parse(text = paste0(\"italic('\",as.character(x), \"')\"))})\n\ncolores_r1 = c(\"#0099FF\",\"#00CC00\",\"#9933FF\",\"brown\",\"yellow\",\"orange\",\"#00FFFF\",\"red\", \n               \"pink\", \"magenta\",\"blue\",\"khaki2\", \n               \"grey\",\"black\")\n\nlength(lab_unicos_r1)==length(colores_r1) \nlength(lab_unicos_r1)\nlength(colores_r1)\n\ntitulo_plot_r1=\"South plot\"\n\npgenus_r1=ggplot(ordenado_r1, aes(x=Group, y=Abundance, fill=Genus, order=Genus)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=colores_r1,\n                    labels=sorted_labels_ggplot_r1,\n                    breaks=nombres_unicos_r1)+\n  labs(y=\"Mean relative abundance (%)\", x=NULL, fill=\"Genus\",title=titulo_plot_r1)+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=limits_r1,labels=group_label_r1,\n                   breaks=levels_r1)+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 100))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=7))+\n  theme(axis.text = element_text(size = 7))+\n  theme(axis.text.x = element_text(face=\"bold\", size=7))+\n  theme(axis.title.y = element_text(size = 7))+\n  theme(legend.key.size = unit(0.2, \"cm\"))+\n  theme(legend.text = element_text(size = 5))+\n  theme(legend.title = element_text(size=5, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)+ \n  theme(legend.position = \"right\")\n\nx11()\npgenus_r1\n\n#a.2) North plot\nmedia_sd_genus_rizo2=media_sd_genus_rizo[media_sd_genus_rizo[,\"Plot\"] == \"Plot2\",]\n\nmedia_sd_genus_rizo2$Genus=as.character(media_sd_genus_rizo2$Genus)\nunclassified_r2=media_sd_genus_rizo2[media_sd_genus_rizo2[,\"Genus\"] == \"unclassified\",] \nmedia_sd_genus_rizo2=media_sd_genus_rizo2[media_sd_genus_rizo2[,\"Genus\"] != \"unclassified\",]\n\nmedia_sd_genus_rizo2$Genus[media_sd_genus_rizo2$Abundance <= 2] = \"Other genera (<2%)\" \nmedia_sd_genus_rizo2$Genus=as.factor(media_sd_genus_rizo2$Genus)\n\nothers_r2=media_sd_genus_rizo2[media_sd_genus_rizo2[,\"Genus\"] == \"Other genera (<2%)\",]\nmedia_sd_genus_rizo2=media_sd_genus_rizo2[media_sd_genus_rizo2[,\"Genus\"] != \"Other genera (<2%)\",]\n\nordenado_r2=media_sd_genus_rizo2[order(media_sd_genus_rizo2$Abundance, decreasing=T),] \nordenado_r2=rbind(ordenado_r2,others_r2,unclassified_r2)\n\ngroup_label_r2=c(\"M\",\"S\", \"M\",\"S\")\nlevels_r2=c(\"A_Plot2_Mature_Rhizosphere\",\"A_Plot2_Immature_Rhizosphere\",\n            \"B_Plot2_Mature_Rhizosphere\",\"B_Plot2_Immature_Rhizosphere\")\nlimits_r2=c(\"A_Plot2_Mature_Rhizosphere\",\"A_Plot2_Immature_Rhizosphere\",\n            \"B_Plot2_Mature_Rhizosphere\",\"B_Plot2_Immature_Rhizosphere\")\n\ngenus_name_ordered_r2=as.vector(ordenado_r2$Genus)\nnombres_unicos_r2=unique(genus_name_ordered_r2)\n\nordenado_r2$Genus=reorder.factor(ordenado_r2$Genus,new.order=rev(nombres_unicos_r2))\nlab_unicos_r2=nombres_unicos_r2\n\nsorted_labels_ggplot_r2 <- sapply(lab_unicos_r2,\n                                  function(x) if (x == \"Other genera (<2%)\"|x == \"unclassified\"|x == \"Other genera (<2%)\")\n                                  {parse(text=paste0(\"'\", as.character(x), \"'\"))} else {parse(text = paste0(\"italic('\",as.character(x), \"')\"))})\n\n\ncolores_r2 = c(\"#0099FF\",\"#00CC00\",\"#9933FF\",\"yellow\",\"green4\",\"steelblue4\",\"brown\",\"maroon\",\"gold1\",\n            \n               \"grey\",\"black\")\n\nlength(lab_unicos_r2)==length(colores_r2)\nlength(lab_unicos_r2)\nlength(colores_r2)\n\ntitulo_plot_r2=\"North plot\"\n\npgenus_r2=ggplot(ordenado_r2, aes(x=Group, y=Abundance, fill=Genus, order=Genus)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=colores_r2,\n                    labels=sorted_labels_ggplot_r2,\n                    breaks=nombres_unicos_r2)+\n  labs(y=\"Mean relative abundance (%)\", x=NULL, fill=\"Genus\",title=titulo_plot_r2)+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=limits_r2,labels=group_label_r2,\n                   breaks=levels_r2)+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 100))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=7))+\n  theme(axis.text = element_text(size = 7))+\n  theme(axis.text.x = element_text(face=\"bold\", size=7))+\n  theme(axis.title.y = element_text(size = 7))+\n  theme(legend.key.size = unit(0.2, \"cm\"))+\n  theme(legend.text = element_text(size = 5))+\n  theme(legend.title = element_text(size=5, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)+ \n  theme(legend.position = \"right\")\n\nx11()\npgenus_r2\n\n#b) ENDOSPHERE\nmedia_sd_genus_endo=media_sd_genus_todos[media_sd_genus_todos[,\"Compartment\"] == \"Endosphere\",]\n\n#b.1) South plot\nmedia_sd_genus_endo1=media_sd_genus_endo[media_sd_genus_endo[,\"Plot\"] == \"Plot1\",]\n\nmedia_sd_genus_endo1$Genus=as.character(media_sd_genus_endo1$Genus)\nunclassified_e1=media_sd_genus_endo1[media_sd_genus_endo1[,\"Genus\"] == \"unclassified\",] \nmedia_sd_genus_endo1=media_sd_genus_endo1[media_sd_genus_endo1[,\"Genus\"] != \"unclassified\",]\n\nmedia_sd_genus_endo1$Genus[media_sd_genus_endo1$Abundance <= 2] = \"Other genera (<2%)\" \nmedia_sd_genus_endo1$Genus=as.factor(media_sd_genus_endo1$Genus)\n\n\nothers_e1=media_sd_genus_endo1[media_sd_genus_endo1[,\"Genus\"] == \"Other genera (<2%)\",]\nmedia_sd_genus_endo1=media_sd_genus_endo1[media_sd_genus_endo1[,\"Genus\"] != \"Other genera (<2%)\",]\nordenado_e1=media_sd_genus_endo1[order(media_sd_genus_endo1$Abundance, decreasing=T),] \nordenado_e1=rbind(ordenado_e1,others_e1,unclassified_e1)\n\ngroup_label_e1=c(\"M\",\"S\", \"M\",\"S\")\nlevels_e1=c(\"A_Plot1_Mature_Endosphere\",\"A_Plot1_Immature_Endosphere\",\n            \"B_Plot1_Mature_Endosphere\",\"B_Plot1_Immature_Endosphere\")\nlimits_e1=c(\"A_Plot1_Mature_Endosphere\",\"A_Plot1_Immature_Endosphere\",\n            \"B_Plot1_Mature_Endosphere\",\"B_Plot1_Immature_Endosphere\")\n\ngenus_name_ordered_e1=as.vector(ordenado_e1$Genus)\nnombres_unicos_e1=unique(genus_name_ordered_e1)\n\nordenado_e1$Genus=reorder.factor(ordenado_e1$Genus,new.order=rev(nombres_unicos_e1))\nlab_unicos_e1=nombres_unicos_e1 \n\nsorted_labels_ggplot_e1<- sapply(lab_unicos_e1,\n                                  function(x) if (x == \"Other genera (<2%)\"|x == \"unclassified\"|x == \"Other genera (<2%)\")\n                                  {parse(text=paste0(\"'\", as.character(x), \"'\"))} else {parse(text = paste0(\"italic('\",as.character(x), \"')\"))})\n\n\ncolores_e1 = c(\"purple\",\"violet\",\"firebrick\",\"#CAB2D6\",\"powderblue\",\"yellow4\",\"#FB9A99\",\n               \"#FDBF6F\", \"coral2\",\"springgreen3\",\"lightgoldenrod2\",\"mediumorchid2\",\"gold1\",\n                 \"grey\",\"black\")\n\nlength(lab_unicos_e1)==length(colores_e1)\nlength(lab_unicos_e1)\nlength(colores_e1)\n\ntitulo_plot_e1=\"South plot\"\n\npgenus_e1=ggplot(ordenado_e1, aes(x=Group, y=Abundance, fill=Genus, order=Genus)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=colores_e1,\n                    labels=sorted_labels_ggplot_e1,\n                    breaks=nombres_unicos_e1)+\n  labs(y=\"Mean relative abundance (%)\", x=NULL, fill=\"Genus\",title=titulo_plot_e1)+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=limits_e1,labels=group_label_e1,\n                   breaks=levels_e1)+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 100))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=7))+\n  theme(axis.text = element_text(size = 7))+\n  theme(axis.text.x = element_text(face=\"bold\", size=7))+\n  theme(axis.title.y = element_text(size = 7))+\n  theme(legend.key.size = unit(0.2, \"cm\"))+\n  theme(legend.text = element_text(size = 5))+\n  theme(legend.title = element_text(size=5, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)+\n  theme(legend.position = \"none\")\n\nx11()\npgenus_e1\n\n#b.2) North plot\nmedia_sd_genus_endo2=media_sd_genus_endo[media_sd_genus_endo[,\"Plot\"] == \"Plot2\",]\n\nmedia_sd_genus_endo2$Genus=as.character(media_sd_genus_endo2$Genus)\nunclassified_e2=media_sd_genus_endo2[media_sd_genus_endo2[,\"Genus\"] == \"unclassified\",] \nmedia_sd_genus_endo2=media_sd_genus_endo2[media_sd_genus_endo2[,\"Genus\"] != \"unclassified\",]\n\nmedia_sd_genus_endo2$Genus[media_sd_genus_endo2$Abundance <= 2] = \"Other genera (<2%)\" \nmedia_sd_genus_endo2$Genus=as.factor(media_sd_genus_endo2$Genus)\n\nothers_e2=media_sd_genus_endo2[media_sd_genus_endo2[,\"Genus\"] == \"Other genera (<2%)\",]\nmedia_sd_genus_endo2=media_sd_genus_endo2[media_sd_genus_endo2[,\"Genus\"] != \"Other genera (<2%)\",]\n\nordenado_e2=media_sd_genus_endo2[order(media_sd_genus_endo2$Abundance, decreasing=T),] \nordenado_e2=rbind(ordenado_e2,others_e2,unclassified_e2)\n\n\ngroup_label_e2=c(\"M\",\"S\", \"M\",\"S\")\nlevels_e2=c(\"A_Plot2_Mature_Endosphere\",\"A_Plot2_Immature_Endosphere\",\n            \"B_Plot2_Mature_Endosphere\",\"B_Plot2_Immature_Endosphere\")\nlimits_e2=c(\"A_Plot2_Mature_Endosphere\",\"A_Plot2_Immature_Endosphere\",\n            \"B_Plot2_Mature_Endosphere\",\"B_Plot2_Immature_Endosphere\")\n\ngenus_name_ordered_e2=as.vector(ordenado_e2$Genus)\nnombres_unicos_e2=unique(genus_name_ordered_e2)\nordenado_e2$Genus=reorder.factor(ordenado_e2$Genus,new.order=rev(nombres_unicos_e2))\nlab_unicos_e2=nombres_unicos_e2 \n\nsorted_labels_ggplot_e2 <- sapply(lab_unicos_e2,\n                                  function(x) if (x == \"Other genera (<2%)\"|x == \"unclassified\"|x == \"Other genera (<2%)\")\n                                  {parse(text=paste0(\"'\", as.character(x), \"'\"))} else {parse(text = paste0(\"italic('\",as.character(x), \"')\"))})\n\ncolores_e2 = c(\"purple\", \"violet\",\"burlywood\",\"gold1\",\"darkseagreen2\",\"darkmagenta\",\"sienna2\",\"grey90\",\"mediumslateblue\",\n               \"lightgoldenrod2\",\"springgreen3\",\"#00CC00\",\"saddlebrown\",\"orangered2\",\"powderblue\",\"#CAB2D6\",\"peachpuff\",\n               \"grey\",\"black\")\n\nlength(lab_unicos_e2)==length(colores_e2) \nlength(lab_unicos_e2)\nlength(colores_e2)\n\ntitulo_plot_e2=\"North plot\"\n\npgenus_e2=ggplot(ordenado_e2, aes(x=Group, y=Abundance, fill=Genus, order=Genus)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=colores_e2,\n                    labels=sorted_labels_ggplot_e2,\n                    breaks=nombres_unicos_e2)+\n  labs(y=\"Mean relative abundance (%)\", x=NULL, fill=\"Genus\",title=titulo_plot_e2)+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=limits_e2,labels=group_label_e2,\n                   breaks=levels_e2)+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 100))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=7))+\n  theme(axis.text = element_text(size = 7))+\n  theme(axis.text.x = element_text(face=\"bold\", size=7))+\n  theme(axis.title.y = element_text(size = 7))+\n  theme(legend.key.size = unit(0.2, \"cm\"))+\n  theme(legend.text = element_text(size = 5))+\n  theme(legend.title = element_text(size=5, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)+ \n  theme(legend.position = \"right\")\n\nx11()\npgenus_e2\n```\n:::\n\n\nIn Figure 7 you can observe an example of the stacked bar plot for the main genera. This kind of plot can be calculated at the taxonomical rank you prefer. Please, try to open the plot in a new window if you want to view it at full size.\n\n![Figure 7. Distribution of the main classified genera in the root endosphere of mother and sucker plants in 2022 (left) and 2023 (right)](images/Genera_endo2.jpeg){fig-align=\"center\"}\n\n# 7. Bacterial transmission analyses\n\nOur experimental design allows us to study the potential transmission of microorganisms from mothers to first and second suckers. For that purpose, we firstly compared the root microbiota of mothers and first suckers, and then, these shared microorganisms were further compared against the microbiota of rhizosphere of sucker plants. It is expected that the microorganisms that are found in the root endosphere of suckers (and not found in the rhizosphere) and also in the root endosphere of mother plants, are transferred from mothers to suckers through the root system (corm), but not acquired from the surrounding soil of from the environment.\n\nWe will perform this analysis just at ASV level\n\n## 7.1 Prepare the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmt1=as.data.frame(sample_data(phy_data_relabun))\nnames = unique(mt1$Fusion) #get the name of each level of the variable \"Fusion\", which in this example corresponds to each individual group of samples. For instance, the first level of the variable \"Fusion\" is \"A_Plot1_Mature_Rhizosphere\" (all rhizosphere samples of mother plants sampled in 2022 located in the south plot)\n\n#in the following for loop we are creating a list in which we are saving one each phyloseq object per group of samples. That is to say, in the first element of the list, the phyloseq object corresponding to the samples of the rhizosphere of mother plants sampled in 2022 located in the south plot is stored.\npruned_data = list()\nfor(i in 1:length(names)){\n  samples_group = mt1[which(mt1$Fusion==names[i]),]$Sample\n  pruned_data[[i]] = prune_samples(samples_group, phy_data_relabun)\n  }\n\n#this loop stored the taxonony and ASV table of each phyloseq element of the previously created list\notu_tables = list()\ntax_tables = list()\nfor (i in 1:length(pruned_data)){\n  otu_tables[[i]] <- as.data.frame(otu_table(pruned_data[[i]]))\n  tax_tables[[i]] <- as.data.frame(tax_table(pruned_data[[i]]))\n}#it gives the list \"otu_tables\", whose element [[1]] corresponds to the ASV table of the group of sample \"A_Plot1_Mature_Rhizosphere\". While \"tax_tables\" list stores the taxonomy tables\n\n#this list merges each ASV table with each tax table by rownames (by=0)\nwhole_tables = list()\nfor (i in 1:length(pruned_data)){\n  whole_tables[[i]] <- merge(tax_tables[[i]],otu_tables[[i]], by=0)\n}\n\nfor(i in 1:length(whole_tables)){\n  whole_tables[[i]]$ASV_names=whole_tables[[i]]$Row.names\n}#it creates a new column in the list \"wholes_tables\" that corresponds to the rownames\n\nfor (i in 1:length(whole_tables)){ #create one dataframe per element from the list \"whole_tables\"\n  assign(paste0(names[i],\"_df\"),as.data.frame(whole_tables[[i]]))\n}\n\n#the previous loop returns complex dataframe names, so let's rename them and calculate the total number of sequences registered for each ASV in all the corresponding dataset \nA_r1_M=A_Plot1_Mature_Rhizosphere_df; A_r1_M$Sum=rowSums(A_r1_M[,9:ncol(A_r1_M)]); A_r1_M_def=A_r1_M[which(A_r1_M$Sum>0,arr.ind=TRUE),];A_r1_M_def2= subset(A_r1_M_def, select = -c(Sum))#we remove those ASV that account for 0 sequences in sum in each dataset\nA_e1_M=A_Plot1_Mature_Endosphere_df; A_e1_M$Sum=rowSums(A_e1_M[,9:ncol(A_e1_M)]); A_e1_M_def=A_e1_M[which(A_e1_M$Sum>0,arr.ind=TRUE),];A_e1_M_def2= subset(A_e1_M_def, select = -c(Sum))\nA_e1_I=A_Plot1_Immature_Endosphere_df; A_e1_I$Sum=rowSums(A_e1_I[,9:ncol(A_e1_I)]); A_e1_I_def=A_e1_I[which(A_e1_I$Sum>0,arr.ind=TRUE),];A_e1_I_def2= subset(A_e1_I_def, select = -c(Sum))\nA_r1_I=A_Plot1_Immature_Rhizosphere_df; A_r1_I$Sum=rowSums(A_r1_I[,9:ncol(A_r1_I)]); A_r1_I_def=A_r1_I[which(A_r1_I$Sum>0,arr.ind=TRUE),];A_r1_I_def2= subset(A_r1_I_def, select = -c(Sum))\nA_e2_M=A_Plot2_Mature_Endosphere_df; A_e2_M$Sum=rowSums(A_e2_M[,9:ncol(A_e2_M)]); A_e2_M_def=A_e2_M[which(A_e2_M$Sum>0,arr.ind=TRUE),];A_e2_M_def2= subset(A_e2_M_def, select = -c(Sum))\nA_r2_M=A_Plot2_Mature_Rhizosphere_df; A_r2_M$Sum=rowSums(A_r2_M[,9:ncol(A_r2_M)]); A_r2_M_def=A_r2_M[which(A_r2_M$Sum>0,arr.ind=TRUE),];A_r2_M_def2= subset(A_r2_M_def, select = -c(Sum))\nA_r2_I=A_Plot2_Immature_Rhizosphere_df; A_r2_I$Sum=rowSums(A_r2_I[,9:ncol(A_r2_I)]); A_r2_I_def=A_r2_I[which(A_r2_I$Sum>0,arr.ind=TRUE),];A_r2_I_def2= subset(A_r2_I_def, select = -c(Sum))\nA_e2_I=A_Plot2_Immature_Endosphere_df; A_e2_I$Sum=rowSums(A_e2_I[,9:ncol(A_e2_I)]);A_e2_I_def=A_e2_I[which(A_e2_I$Sum>0,arr.ind=TRUE),];A_e2_I_def2= subset(A_e2_I_def, select = -c(Sum))\nB_r1_M=B_Plot1_Mature_Rhizosphere_df; B_r1_M$Sum=rowSums(B_r1_M[,9:ncol(B_r1_M)]); B_r1_M_def=B_r1_M[which(B_r1_M$Sum>0,arr.ind=TRUE),];B_r1_M_def2= subset(B_r1_M_def, select = -c(Sum))\nB_r1_I=B_Plot1_Immature_Rhizosphere_df; B_r1_I$Sum=rowSums(B_r1_I[,9:ncol(B_r1_I)]); B_r1_I_def=B_r1_I[which(B_r1_I$Sum>0,arr.ind=TRUE),];B_r1_I_def2= subset(B_r1_I_def, select = -c(Sum))\nB_r2_M=B_Plot2_Mature_Rhizosphere_df; B_r2_M$Sum=rowSums(B_r2_M[,9:ncol(B_r2_M)]); B_r2_M_def=B_r2_M[which(B_r2_M$Sum>0,arr.ind=TRUE),];B_r2_M_def2= subset(B_r2_M_def, select = -c(Sum))\nB_r2_I=B_Plot2_Immature_Rhizosphere_df; B_r2_I$Sum=rowSums(B_r2_I[,9:ncol(B_r2_I)]); B_r2_I_def=B_r2_I[which(B_r2_I$Sum>0,arr.ind=TRUE),];B_r2_I_def2= subset(B_r2_I_def, select = -c(Sum))\nB_e1_I=B_Plot1_Immature_Endosphere_df; B_e1_I$Sum=rowSums(B_e1_I[,9:ncol(B_e1_I)]); B_e1_I_def=B_e1_I[which(B_e1_I$Sum>0,arr.ind=TRUE),];B_e1_I_def2= subset(B_e1_I_def, select = -c(Sum))\nB_e1_M=B_Plot1_Mature_Endosphere_df; B_e1_M$Sum=rowSums(B_e1_M[,9:ncol(B_e1_M)]); B_e1_M_def=B_e1_M[which(B_e1_M$Sum>0,arr.ind=TRUE),];B_e1_M_def2= subset(B_e1_M_def, select = -c(Sum))\nB_e2_M=B_Plot2_Mature_Endosphere_df; B_e2_M$Sum=rowSums(B_e2_M[,9:ncol(B_e2_M)]); B_e2_M_def=B_e2_M[which(B_e2_M$Sum>0,arr.ind=TRUE),];B_e2_M_def2= subset(B_e2_M_def, select = -c(Sum))\nB_e2_I=B_Plot2_Immature_Endosphere_df; B_e2_I$Sum=rowSums(B_e2_I[,9:ncol(B_e2_I)]); B_e2_I_def=B_e2_I[which(B_e2_I$Sum>0,arr.ind=TRUE),];B_e2_I_def2= subset(B_e2_I_def, select = -c(Sum))\n```\n:::\n\n\n## 7.2 Compare ASVs between mother and sucker plants\n\nRemember that we want to retain the ASVs that are shared between mother and sucker plants (just in the root endosphere). They could be both transferred by mother plants or acquired from the rhizosphere soil.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) South plot\n#a.1) 2022\ncompartidos_A_e1=cbind(A_e1_M_def2[A_e1_M_def2$ASV_names %in% A_e1_I_def2$ASV_names,], A_e1_I_def2[A_e1_I_def2$ASV_names %in% A_e1_M_def2$ASV_names,])#retain those ASVs that are in the dataframe of mothers and suckers (root endosphere)\ncompartidos_A_e1=compartidos_A_e1[,-(21:28)]#removing extra information\nwrite.table(data.frame(\"_\"=rownames(compartidos_A_e1),compartidos_A_e1),file=\"Core_A_e1.txt\",sep=\"\\t\", row.names = F)\n\n#a.2) 2023\ncompartidos_B_e1=cbind(B_e1_M_def2[B_e1_M_def2$ASV_names %in% B_e1_I_def2$ASV_names,], B_e1_I_def2[B_e1_I_def2$ASV_names %in% B_e1_M_def2$ASV_names,])\ncompartidos_B_e1=compartidos_B_e1[,-(20:27)]\nwrite.table(data.frame(\"_\"=rownames(compartidos_B_e1),compartidos_B_e1),file=\"Core_B_e1.txt\",sep=\"\\t\", row.names = F)\n\n#b) North plot\n#b.1) 2022\ncompartidos_A_e2=cbind(A_e2_M_def2[A_e2_M_def2$ASV_names %in% A_e2_I_def2$ASV_names,], A_e2_I_def2[A_e2_I_def2$ASV_names %in% A_e2_M_def2$ASV_names,])\ncompartidos_A_e2=compartidos_A_e2[,-(21:28)]\nwrite.table(data.frame(\"_\"=rownames(compartidos_A_e2),compartidos_A_e2),file=\"Core_A_e2.txt\",sep=\"\\t\", row.names = F)\n\n#b.2) North plot\ncompartidos_B_e2=cbind(B_e2_M_def2[B_e2_M_def2$ASV_names %in% B_e2_I_def2$ASV_names,], B_e2_I_def2[B_e2_I_def2$ASV_names %in% B_e2_M_def2$ASV_names,])\ncompartidos_B_e2=compartidos_B_e2[,-(19:26)]\nwrite.table(data.frame(\"_\"=rownames(compartidos_B_e2),compartidos_B_e2),file=\"Core_B_e2.txt\",sep=\"\\t\", row.names = F)\n```\n:::\n\n\nNow, we are going to compare the shared bacterial communities against the bacterial communities dwelling in the rhizosphere soil of the suckers. We will retain bacterial members that are in the root endosphere but **NO** in the rhizosphere soil\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) South plot\n#a.1) 2022\ncompartidos_A1_endo_rizo=cbind(compartidos_A_e1[compartidos_A_e1$ASV_names %in% A_r1_I_def2$ASV_names,], A_r1_I_def2[A_r1_I_def2$ASV_names %in% compartidos_A_e1$ASV_names,])\ncompartidos_A1_endo_rizo=compartidos_A1_endo_rizo[,-(33:40)]#remove extra information from the data (additional columns indicating, again, the taxonomy of the ASVs)\nwrite.table(data.frame(\"_\"=rownames(compartidos_A1_endo_rizo),compartidos_A1_endo_rizo),file=\"Compartidos_A1_endo_rizo.txt\",sep=\"\\t\", row.names = F)\n\n#a.2) 2023\ncompartidos_B1_endo_rizo=cbind(compartidos_B_e1[compartidos_B_e1$ASV_names %in% B_r1_I_def2$ASV_names,], B_r1_I_def2[B_r1_I_def2$ASV_names %in% compartidos_B_e1$ASV_names,])\ncompartidos_B1_endo_rizo=compartidos_B1_endo_rizo[,-(28:35)]\nwrite.table(data.frame(\"_\"=rownames(compartidos_B1_endo_rizo),compartidos_B1_endo_rizo),file=\"Compartidos_B1_endo_rizo.txt\",sep=\"\\t\", row.names = F)\n\n#b) North plot\n#b.1) 2022\ncompartidos_A2_endo_rizo=cbind(compartidos_A_e2[compartidos_A_e2$ASV_names %in% A_r2_I_def2$ASV_names,], A_r2_I_def2[A_r2_I_def2$ASV_names %in% compartidos_A_e2$ASV_names,])\ncompartidos_A2_endo_rizo=compartidos_A2_endo_rizo[,-(29:36)]\nwrite.table(data.frame(\"_\"=rownames(compartidos_A2_endo_rizo),compartidos_A2_endo_rizo),file=\"Compartidos_A2_endo_rizo.txt\",sep=\"\\t\", row.names = F)\n\n#b.2) 2023\ncompartidos_B2_endo_rizo=cbind(compartidos_B_e2[compartidos_B_e2$ASV_names %in% B_r2_I_def2$ASV_names,], B_r2_I_def2[B_r2_I_def2$ASV_names %in% compartidos_B_e2$ASV_names,])\ncompartidos_B2_endo_rizo=compartidos_B2_endo_rizo[,-(27:34)]\nwrite.table(data.frame(\"_\"=rownames(compartidos_B2_endo_rizo),compartidos_B2_endo_rizo),file=\"Compartidos_B2_endo_rizo.txt\",sep=\"\\t\", row.names = F)\n\n#Remove those ASV detected both in the rhizosphere and in the root endosphere\n\n#a) South plot\n#a.1) 2022\nespecif_A1_endo=subset(compartidos_A_e1, !(ASV_names %in% compartidos_A1_endo_rizo$ASV_names))\nwrite.table(data.frame(\"_\"=rownames(especif_A1_endo),especif_A1_endo),file=\"A1_Endo_Transmitidos_Madreahija.txt\",sep=\"\\t\", row.names = F)\n\n#a.2) 2023\nespecif_B1_endo=subset(compartidos_B_e1, !(ASV_names %in% compartidos_B1_endo_rizo$ASV_names))\nwrite.table(data.frame(\"_\"=rownames(especif_B1_endo),especif_B1_endo),file=\"B1_Endo_Transmitidos_Madreahija.txt\",sep=\"\\t\", row.names = F)\n\n#b) North plot\n#b.1) 2022\nespecif_A2_endo=subset(compartidos_A_e2, !(ASV_names %in% compartidos_A2_endo_rizo$ASV_names))\nwrite.table(data.frame(\"_\"=rownames(especif_A2_endo),especif_A2_endo),file=\"A2_Endo_Transmitidos_Madreahija.txt\",sep=\"\\t\", row.names = F)\n\n#b.2) 2023\nespecif_B2_endo=subset(compartidos_B_e2, !(ASV_names %in% compartidos_B2_endo_rizo$ASV_names))\nwrite.table(data.frame(\"_\"=rownames(especif_B2_endo),especif_B2_endo),file=\"B2_Endo_Transmitidos_Madreahija.txt\",sep=\"\\t\", row.names = F)\n```\n:::\n\n\nIn this work, we analyzed carefully the number and proportions of the transferred ASVs in Excel\n\n## 7.3 Plotting\n\nIn this section, we are going to make different graph representing the microbial transmission process. We will use barplots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) South plot\n#a.1) 2022\ntotales_M_A_e1=nrow(A_e1_M_def2)#get the total number of ASV in mothers\ntransferidos_A_e1=nrow(especif_A1_endo)#get the number of shared ASVs between mothers and suckers\nprop_transferidos_M_A_e1=(transferidos_A_e1 / totales_M_A_e1) *100 #calculate the proportion of transferred ASVs\nprop_perdidos_M_A_e1=((totales_M_A_e1-transferidos_A_e1) / totales_M_A_e1) *100#calculate the proportion of ASVs lost by the mothers\n\ntotales_I_A_e1=nrow(A_e1_I_def2)#get the total number of ASVs in suckers\nprop_transferidos_I_A_e1=(transferidos_A_e1 / totales_I_A_e1) *100#get the number of shared ASVs between mothers and suckers\nprop_adquiridos_I_A_e1=((totales_I_A_e1-transferidos_A_e1) / totales_I_A_e1) *100#calculate the proportion of ASVs acquired by the suckers\n\nbarras_A_e1=as.data.frame(rbind(prop_transferidos_M_A_e1,prop_perdidos_M_A_e1,\n                              prop_transferidos_I_A_e1,prop_adquiridos_I_A_e1))#create a dataframe with all the values in order to plot them \nbarras_A_e1$Year=\"A\"\nbarras_A_e1$Plant=c(\"Mother\", \"Mother\", \"Sucker\", \"Sucker\")\nbarras_A_e1$Condition=as.factor(c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"))\ncolnames(barras_A_e1)[1]=\"Proportion\"\n\n#a.2) 2023\ntotales_M_B_e1=nrow(B_e1_M_def2)\ntransferidos_B_e1=nrow(especif_B1_endo)\nprop_transferidos_M_B_e1=(transferidos_B_e1 / totales_M_B_e1) *100\nprop_perdidos_M_B_e1=((totales_M_B_e1-transferidos_B_e1) / totales_M_B_e1) *100\n\ntotales_I_B_e1=nrow(B_e1_I_def2)\nprop_transferidos_I_B_e1=(transferidos_B_e1 / totales_I_B_e1) *100\nprop_adquiridos_I_B_e1=((totales_I_B_e1-transferidos_B_e1) / totales_I_B_e1) *100\n\nbarras_B_e1=as.data.frame(rbind(prop_transferidos_M_B_e1,prop_perdidos_M_B_e1,\n                                prop_transferidos_I_B_e1,prop_adquiridos_I_B_e1))\nbarras_B_e1$Year=\"B\"\nbarras_B_e1$Plant=c(\"Mother\", \"Mother\", \"Sucker\", \"Sucker\")\nbarras_B_e1$Condition=as.factor(c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"))\ncolnames(barras_B_e1)[1]=\"Proportion\"\n\nA_e1=ggplot(barras_A_e1, aes(x=Plant, y=Proportion, fill=Condition, order=Condition)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=c(\"magenta\", \"deepskyblue\", \"magenta\",\"green\"),\n                    labels=c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"),\n                    breaks=c(\"Transmimtted\",\"Lost\", \"Transmitted\", \"Acquired\"))+\n  labs(y=\"Proportion of ASV (%)\", x=NULL, fill=\"Condition\",title=\"South plot (2022)\")+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=c(\"Mother\",\"Sucker\"),labels=c(\"Mother\",\"Sucker\"),\n                   breaks=c(\"Mother\",\"Sucker\"))+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 101))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)\nx11()\nA_e1\n\nB_e1=ggplot(barras_B_e1, aes(x=Plant, y=Proportion, fill=Condition, order=Condition)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=c(\"magenta\", \"deepskyblue\", \"magenta\",\"green\"),\n                    labels=c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"),\n                    breaks=c(\"Transmimtted\",\"Lost\", \"Transmitted\", \"Acquired\"))+\n  labs(y=\"Proportion of ASV (%)\", x=NULL, fill=\"Condition\",title=\"South plot (2023)\")+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=c(\"Mother\",\"Sucker\"),labels=c(\"Mother\",\"Sucker\"),\n                   breaks=c(\"Mother\",\"Sucker\"))+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 101))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)\nx11()\nB_e1\n\nx11()\np_Plot1=grid.arrange(A_e1,B_e1,ncol=2, nrow=1, top=textGrob(\"Plot 1\", gp=gpar(fontsize=18)))\n\n#b) North plot\n#b.1) 2022\ntotales_M_A_e2=nrow(A_e2_M_def2)\ntransferidos_A_e2=nrow(especif_A2_endo)\nprop_transferidos_M_A_e2=(transferidos_A_e2 / totales_M_A_e2) *100\nprop_perdidos_M_A_e2=((totales_M_A_e2-transferidos_A_e2) / totales_M_A_e2) *100\n\ntotales_I_A_e2=nrow(A_e2_I_def2)\nprop_transferidos_I_A_e2=(transferidos_A_e2 / totales_I_A_e2) *100\nprop_adquiridos_I_A_e2=((totales_I_A_e2-transferidos_A_e2) / totales_I_A_e2) *100\n\nbarras_A_e2=as.data.frame(rbind(prop_transferidos_M_A_e2,prop_perdidos_M_A_e2,\n                                prop_transferidos_I_A_e2,prop_adquiridos_I_A_e2))\nbarras_A_e2$Year=\"A\"\nbarras_A_e2$Plant=c(\"Mother\", \"Mother\", \"Sucker\", \"Sucker\")\nbarras_A_e2$Condition=as.factor(c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"))\ncolnames(barras_A_e2)[1]=\"Proportion\"\n\n#b.2) 2023\ntotales_M_B_e2=nrow(B_e2_M_def2)\ntransferidos_B_e2=nrow(especif_B2_endo)\nprop_transferidos_M_B_e2=(transferidos_B_e2 / totales_M_B_e2) *100\nprop_perdidos_M_B_e2=((totales_M_B_e2-transferidos_B_e2) / totales_M_B_e2) *100\n\ntotales_I_B_e2=nrow(B_e2_I_def2)\nprop_transferidos_I_B_e2=(transferidos_B_e2 / totales_I_B_e2) *100\nprop_adquiridos_I_B_e2=((totales_I_B_e2-transferidos_B_e2) / totales_I_B_e2) *100\n\nbarras_B_e2=as.data.frame(rbind(prop_transferidos_M_B_e2,prop_perdidos_M_B_e2,\n                                prop_transferidos_I_B_e2,prop_adquiridos_I_B_e2))\nbarras_B_e2$Year=\"B\"\nbarras_B_e2$Plant=c(\"Mother\", \"Mother\", \"Sucker\", \"Sucker\")\nbarras_B_e2$Condition=as.factor(c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"))\ncolnames(barras_B_e2)[1]=\"Proportion\"\n\nA_e2=ggplot(barras_A_e2, aes(x=Plant, y=Proportion, fill=Condition, order=Condition)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=c(\"magenta\", \"deepskyblue\", \"magenta\",\"green\"),\n                    labels=c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"),\n                    breaks=c(\"Transmimtted\",\"Lost\", \"Transmitted\", \"Acquired\"))+\n  labs(y=\"Proportion of ASV (%)\", x=NULL, fill=\"Condition\",title=\"North plot (2022)\")+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=c(\"Mother\",\"Sucker\"),labels=c(\"Mother\",\"Sucker\"),\n                   breaks=c(\"Mother\",\"Sucker\"))+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 101))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)\nx11()\nA_e2\n\nB_e2=ggplot(barras_B_e2, aes(x=Plant, y=Proportion, fill=Condition, order=Condition)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=c(\"magenta\", \"deepskyblue\", \"magenta\",\"green\"),\n                    labels=c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"),\n                    breaks=c(\"Transmimtted\",\"Lost\", \"Transmitted\", \"Acquired\"))+\n  labs(y=\"Proportion of ASV (%)\", x=NULL, fill=\"Condition\",title=\"North plot (2023)\")+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=c(\"Mother\",\"Sucker\"),labels=c(\"Mother\",\"Sucker\"),\n                   breaks=c(\"Mother\",\"Sucker\"))+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 101))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)\nx11()\nB_e1\n\nx11()\np_Plot2=grid.arrange(A_e2,B_e2,ncol=2, nrow=1, top=textGrob(\"Plot 2\", gp=gpar(fontsize=18)))\n```\n:::\n\n\nWith this code a bar plot is created (see Figure 8)\n\n![Figure 8. Bar plot indicating the transferred ASV, ASVs lost by the mothers, and ASVs acquired from the environment by the suckers](images/Inheritance.jpg){fig-align=\"center\"}\n\nWe are going to obtain the same plots but instead of plotting the proportion of ASVs lost, acquired and transferred, the relative abundance of each of them will be visualized\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) South plot\n#a.1) 2022\nperdidos_M_A_e1=subset(A_e1_M_def2, !(ASV_names %in% especif_A1_endo$ASV_names))#these are the ASVs that mothers lost\nperdidos_M_A_e1$Promedio=rowMeans(subset(perdidos_M_A_e1, select =c(9:ncol(perdidos_M_A_e1))))#mean relative abundance of each of them\nperdidos_M_A_e1_sum=sum(perdidos_M_A_e1$Promedio)#sum the relative abundance of all the ASVs lost by the mothers\nadquiridos_I_A_e1=subset(A_e1_I_def2, !(ASV_names %in% especif_A1_endo$ASV_names))#these are the ASVs that suckers retain from the environment\nadquiridos_I_A_e1$Promedio=rowMeans(subset(adquiridos_I_A_e1, select =c(9:ncol(adquiridos_I_A_e1))))#mean\nadquiridos_I_A_e1_sum=sum(adquiridos_I_A_e1$Promedio)\n\nespecif_A1_endo$Promedio_Madre=rowMeans(subset(especif_A1_endo, select =c(9:19)))#mean relative abundance of transferred ASVs (in mothers samples)\nespecif_A1_endo_M_sum=sum(especif_A1_endo$Promedio_Madre)  \nespecif_A1_endo$Promedio_Hijas=rowMeans(subset(especif_A1_endo, select =c(20:30)))#mean relative abundance of acquired ASV from mothers (in suckers samples)\nespecif_A1_endo_I_sum=sum(especif_A1_endo$Promedio_Hijas)\n\nAbund_A1_endo=c(especif_A1_endo_M_sum,perdidos_M_A_e1_sum,especif_A1_endo_I_sum,adquiridos_I_A_e1_sum)\nbarras_abund_A_e1=as.data.frame(cbind(barras_A_e1,Abund_A1_endo))#create a new dataframe with all the data\ncolnames(barras_abund_A_e1)[5]=\"Abundance\"\n\nwrite.table(data.frame(\"X\"=rownames(perdidos_M_A_e1),perdidos_M_A_e1),\"AbunRel_perdidos_Madre_A_e1.txt\",sep=\"\\t\",row.names = F)\nwrite.table(data.frame(\"X\"=rownames(adquiridos_I_A_e1),adquiridos_I_A_e1),\"AbunRel_AdquiridosAmbiente_A_e1.txt\",sep=\"\\t\",row.names = F)\nwrite.table(data.frame(\"X\"=rownames(especif_A1_endo),especif_A1_endo),\"AbunRel_TransferidosMadreHija_A_e1.txt\",sep=\"\\t\",row.names = F)\n\n#a.2) 2023\nperdidos_M_B_e1=subset(B_e1_M_def2, !(ASV_names %in% especif_B1_endo$ASV_names))\nperdidos_M_B_e1$Promedio=rowMeans(subset(perdidos_M_B_e1, select =c(9:ncol(perdidos_M_B_e1))))\nperdidos_M_B_e1_sum=sum(perdidos_M_B_e1$Promedio)\nadquiridos_I_B_e1=subset(B_e1_I_def2, !(ASV_names %in% especif_B1_endo$ASV_names))\nadquiridos_I_B_e1$Promedio=rowMeans(subset(adquiridos_I_B_e1, select =c(9:ncol(adquiridos_I_B_e1))))\nadquiridos_I_B_e1_sum=sum(adquiridos_I_B_e1$Promedio)\n\nespecif_B1_endo$Promedio_Madre=rowMeans(subset(especif_B1_endo, select =c(9:19)))\nespecif_B1_endo_M_sum=sum(especif_B1_endo$Promedio_Madre)  \nespecif_B1_endo$Promedio_Hijas=rowMeans(subset(especif_B1_endo, select =c(20:27)))\nespecif_B1_endo_I_sum=sum(especif_B1_endo$Promedio_Hijas)\n\nAbund_B1_endo=c(especif_B1_endo_M_sum,perdidos_M_B_e1_sum,especif_B1_endo_I_sum,adquiridos_I_B_e1_sum)\nbarras_abund_B_e1=as.data.frame(cbind(barras_B_e1,Abund_B1_endo))\ncolnames(barras_abund_B_e1)[5]=\"Abundance\"\n\nwrite.table(data.frame(\"X\"=rownames(perdidos_M_B_e1),perdidos_M_B_e1),\"AbunRel_perdidos_Madre_B_e1.txt\",sep=\"\\t\",row.names = F)\nwrite.table(data.frame(\"X\"=rownames(adquiridos_I_B_e1),adquiridos_I_B_e1),\"AbunRel_AdquiridosAmbiente_B_e1.txt\",sep=\"\\t\",row.names = F)\nwrite.table(data.frame(\"X\"=rownames(especif_B1_endo),especif_B1_endo),\"AbunRel_TransferidosMadreHija_B_e1.txt\",sep=\"\\t\",row.names = F)\n\n#b) North plot\n#b.2) 2022\nperdidos_M_A_e2=subset(A_e2_M_def2, !(ASV_names %in% especif_A2_endo$ASV_names))\nperdidos_M_A_e2$Promedio=rowMeans(subset(perdidos_M_A_e2, select =c(9:ncol(perdidos_M_A_e2))))\nperdidos_M_A_e2_sum=sum(perdidos_M_A_e2$Promedio)\nadquiridos_I_A_e2=subset(A_e2_I_def2, !(ASV_names %in% especif_A2_endo$ASV_names))\nadquiridos_I_A_e2$Promedio=rowMeans(subset(adquiridos_I_A_e2, select =c(9:ncol(adquiridos_I_A_e2))))\nadquiridos_I_A_e2_sum=sum(adquiridos_I_A_e2$Promedio)\n\nespecif_A2_endo$Promedio_Madre=rowMeans(subset(especif_A2_endo, select =c(9:20)))\nespecif_A2_endo_M_sum=sum(especif_A2_endo$Promedio_Madre)  \nespecif_A2_endo$Promedio_Hijas=rowMeans(subset(especif_A2_endo, select =c(21:28)))\nespecif_A2_endo_I_sum=sum(especif_A2_endo$Promedio_Hijas)\n\nAbund_A2_endo=c(especif_A2_endo_M_sum,perdidos_M_A_e2_sum,especif_A2_endo_I_sum,adquiridos_I_A_e2_sum)\nbarras_abund_A_e2=as.data.frame(cbind(barras_A_e2,Abund_A2_endo))\ncolnames(barras_abund_A_e2)[5]=\"Abundance\"\n\nwrite.table(data.frame(\"X\"=rownames(perdidos_M_A_e2),perdidos_M_A_e2),\"AbunRel_perdidos_Madre_A_e2.txt\",sep=\"\\t\",row.names = F)\nwrite.table(data.frame(\"X\"=rownames(adquiridos_I_A_e2),adquiridos_I_A_e2),\"AbunRel_AdquiridosAmbiente_A_e2.txt\",sep=\"\\t\",row.names = F)\nwrite.table(data.frame(\"X\"=rownames(especif_A2_endo),especif_A2_endo),\"AbunRel_TransferidosMadreHija_A_e2.txt\",sep=\"\\t\",row.names = F)\n\n#b.2) 2023\nperdidos_M_B_e2=subset(B_e2_M_def2, !(ASV_names %in% especif_B2_endo$ASV_names))\nperdidos_M_B_e2$Promedio=rowMeans(subset(perdidos_M_B_e2, select =c(9:ncol(perdidos_M_B_e2))))\nperdidos_M_B_e2_sum=sum(perdidos_M_B_e2$Promedio)\nadquiridos_I_B_e2=subset(B_e2_I_def2, !(ASV_names %in% especif_B2_endo$ASV_names))\nadquiridos_I_B_e2$Promedio=rowMeans(subset(adquiridos_I_B_e2, select =c(9:ncol(adquiridos_I_B_e2))))\nadquiridos_I_B_e2_sum=sum(adquiridos_I_B_e2$Promedio)\n\nespecif_B2_endo$Promedio_Madre=rowMeans(subset(especif_B2_endo, select =c(9:18)))\nespecif_B2_endo_M_sum=sum(especif_B2_endo$Promedio_Madre)  \nespecif_B2_endo$Promedio_Hijas=rowMeans(subset(especif_B2_endo, select =c(19:26)))\nespecif_B2_endo_I_sum=sum(especif_B2_endo$Promedio_Hijas)\n\nAbund_B2_endo=c(especif_B2_endo_M_sum,perdidos_M_B_e2_sum,especif_B2_endo_I_sum,adquiridos_I_B_e2_sum)\nbarras_abund_B_e2=as.data.frame(cbind(barras_B_e2,Abund_B2_endo))\ncolnames(barras_abund_B_e2)[5]=\"Abundance\"\n\nwrite.table(data.frame(\"X\"=rownames(perdidos_M_B_e2),perdidos_M_B_e2),\"AbunRel_perdidos_Madre_B_e2.txt\",sep=\"\\t\",row.names = F)\nwrite.table(data.frame(\"X\"=rownames(adquiridos_I_B_e2),adquiridos_I_B_e2),\"AbunRel_AdquiridosAmbiente_B_e2.txt\",sep=\"\\t\",row.names = F)\nwrite.table(data.frame(\"X\"=rownames(especif_B2_endo),especif_B2_endo),\"AbunRel_TransferidosMadreHija_B_e2.txt\",sep=\"\\t\",row.names = F)\n\nA1_abun=ggplot(barras_abund_A_e1, aes(x=Plant, y=Abundance, fill=Condition, order=Condition)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=c(\"magenta\", \"deepskyblue\", \"magenta\",\"green\"),\n                    labels=c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"),\n                    breaks=c(\"Transmimtted\",\"Lost\", \"Transmitted\", \"Acquired\"))+\n  labs(y=\"Relative abundance of ASV (%)\", x=NULL, fill=\"Condition\",title=\"Plot 1 (2022)\")+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=c(\"Mother\",\"Sucker\"),labels=c(\"Mother\",\"Sucker\"),\n                   breaks=c(\"Mother\",\"Sucker\"))+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 101))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)\nx11()\nA1_abun\n\nB1_abun=ggplot(barras_abund_B_e1, aes(x=Plant, y=Abundance, fill=Condition, order=Condition)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=c(\"magenta\", \"deepskyblue\", \"magenta\",\"green\"),\n                    labels=c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"),\n                    breaks=c(\"Transmimtted\",\"Lost\", \"Transmitted\", \"Acquired\"))+\n  labs(y=\"Relative abundance of ASV (%)\", x=NULL, fill=\"Condition\",title=\"Plot 1 (2023)\")+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=c(\"Mother\",\"Sucker\"),labels=c(\"Mother\",\"Sucker\"),\n                   breaks=c(\"Mother\",\"Sucker\"))+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 101))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)\nx11()\nB1_abun\n\nA2_abun=ggplot(barras_abund_A_e2, aes(x=Plant, y=Abundance, fill=Condition, order=Condition)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=c(\"magenta\", \"deepskyblue\", \"magenta\",\"green\"),\n                    labels=c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"),\n                    breaks=c(\"Transmimtted\",\"Lost\", \"Transmitted\", \"Acquired\"))+\n  labs(y=\"Relative abundance of ASV (%)\", x=NULL, fill=\"Condition\",title=\"Plot 2 (2022)\")+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=c(\"Mother\",\"Sucker\"),labels=c(\"Mother\",\"Sucker\"),\n                   breaks=c(\"Mother\",\"Sucker\"))+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 101))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)\nx11()\nA2_abun\n\nB2_abun=ggplot(barras_abund_B_e2, aes(x=Plant, y=Abundance, fill=Condition, order=Condition)) + geom_bar(stat=\"identity\", position=\"stack\")+\n  scale_fill_manual(values=c(\"magenta\", \"deepskyblue\", \"magenta\",\"green\"),\n                    labels=c(\"Transmitted\",\"Lost\", \"Transmitted\", \"Acquired\"),\n                    breaks=c(\"Transmimtted\",\"Lost\", \"Transmitted\", \"Acquired\"))+\n  labs(y=\"Relative abundance of ASV (%)\", x=NULL, fill=\"Condition\",title=\"Plot 2 (2023)\")+\n  guides(fill = guide_legend(reverse = TRUE))+\n  scale_x_discrete(limits=c(\"Mother\",\"Sucker\"),labels=c(\"Mother\",\"Sucker\"),\n                   breaks=c(\"Mother\",\"Sucker\"))+\n  scale_y_continuous(expand=c(0.01,0.01),\n                     breaks=c(0,10,20,30,40,50,60,70,80,90,100),\n                     labels=c(\"0\",\"10\", \"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"),\n                     limits = c(NA, 101))+\n  theme_bw()+\n  theme(panel.border = element_rect(colour=\"black\"))+\n  theme(axis.title.x=element_blank())+\n  theme(plot.title = element_text(face=\"bold\", hjust = 0.5, size=16))+\n  theme(axis.text = element_text(size = 14))+\n  theme(axis.text.x = element_text(face=\"bold\", size=16))+\n  theme(axis.title.y = element_text(size = 16))+\n  theme(legend.key.size = unit(0.9, \"cm\"))+\n  theme(legend.text = element_text(size = 18))+\n  theme(legend.title = element_text(size=18, face=\"bold\"))+\n  theme(legend.title.align=0)+\n  theme(legend.text.align = 0)\nx11()\nB2_abun\n\nx11()\np_abund_p1=grid.arrange(A1_abun,B1_abun,ncol=2, nrow=1, top=textGrob(\"Plot 1\", gp=gpar(fontsize=18)))\n\nx11()\np_abund_p2=grid.arrange(A2_abun,B2_abun,ncol=2, nrow=1, top=textGrob(\"Plot 2\", gp=gpar(fontsize=18)))\n```\n:::\n\n\n# 8. Differentially abundant taxa\n\nIt is interesting to decipher which taxa show statistically significant differences between two groups of samples (i.e., differences in the abundance between mother and suckers plants). For that purpose, we will apply [ANCOM-BC approach](https://www.nature.com/articles/s41467-020-17041-7 \"ANCOM-BC describing paper\"), especially designed for compositional data. Furthermore, we will use the function *ancomloop* of the package *micro4all* in order to compare all groups of samples among them (ANCOM-BC just compares the first group of samples in the dataset with all other groups)\n\nWe will apply this statistical test at both phylum and genus levels.\n\n::: collout-important\nANCOM-BC makes a data transformation and applies logarithms, so in this case, we shouldn't use the normalized abundance. We should use raw phyloseq objects (in which the ASV counts is expressed in absolute abundance)\n:::\n\n## 8.1 Phylum\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) RHIZOSPHERE\nANCOM_phylum_rizo=ancomloop(input_object_phyloseq = rizo, grouping = \"Fusion\",\n                            ancom.options = list(global=FALSE, struc_zero=TRUE, n_cl=8),out.unclassified = TRUE, tax.level=\"Phylum\")\n###options:\n#grouping: indicate your grouping variable\n#n_cl: the number of cores\n#global: apply the global test (for more information, read this paper: https://www.nature.com/articles/s41467-020-17041-7 and documentation of the function ancombc)\n#struc_zero: remove \"structural zeros\" (not real zeros but zeros resulting from a wrong sampling procedure)\n#out.unclassified: apply or not the test to unclassified taxa\n#tax.level: indicate the taxonomical level that you want to analyze\n\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_rizo[[1]]),ANCOM_phylum_rizo[[1]]),file=\"ANCOM_Phylum_Rizo_2022_Plot1_I.txt\",sep=\"\\t\", row.names = F) #save the first element of the list, which corresponds to the results obtained from the comparison of the first group of samples with the other groups\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_rizo[[2]]),ANCOM_phylum_rizo[[2]]),file=\"ANCOM_Phylum_Rizo_2022_Plot1_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_rizo[[3]]),ANCOM_phylum_rizo[[3]]),file=\"ANCOM_Phylum_Rizo_2022_Plot2_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_rizo[[4]]),ANCOM_phylum_rizo[[4]]),file=\"ANCOM_Phylum_Rizo_2022_Plot2_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_rizo[[5]]),ANCOM_phylum_rizo[[5]]),file=\"ANCOM_Phylum_Rizo_2023_Plot1_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_rizo[[6]]),ANCOM_phylum_rizo[[6]]),file=\"ANCOM_Phylum_Rizo_2023_Plot1_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_rizo[[7]]),ANCOM_phylum_rizo[[7]]),file=\"ANCOM_Phylum_Rizo_2023_Plot2_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_rizo[[8]]),ANCOM_phylum_rizo[[8]]),file=\"ANCOM_Phylum_Rizo_2023_Plot2_M.txt\",sep=\"\\t\", row.names = F)\n\n#b) ENDOSPHERE\nANCOM_phylum_endo=ancomloop(input_object_phyloseq = endo, grouping = \"Fusion\", \n                            ancom.options = list(global=FALSE, struc_zero=TRUE, n_cl=8),out.unclassified = TRUE, tax.level=\"Phylum\")\n\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_endo[[1]]),ANCOM_phylum_endo[[1]]),file=\"ANCOM_Phylum_endo_2022_Plot1_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_endo[[2]]),ANCOM_phylum_endo[[2]]),file=\"ANCOM_Phylum_endo_2022_Plot1_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_endo[[3]]),ANCOM_phylum_endo[[3]]),file=\"ANCOM_Phylum_endo_2022_Plot2_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_endo[[4]]),ANCOM_phylum_endo[[4]]),file=\"ANCOM_Phylum_endo_2022_Plot2_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_endo[[5]]),ANCOM_phylum_endo[[5]]),file=\"ANCOM_Phylum_endo_2023_Plot1_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_endo[[6]]),ANCOM_phylum_endo[[6]]),file=\"ANCOM_Phylum_endo_2023_Plot1_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_endo[[7]]),ANCOM_phylum_endo[[7]]),file=\"ANCOM_Phylum_endo_2023_Plot2_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_phylum_endo[[8]]),ANCOM_phylum_endo[[8]]),file=\"ANCOM_Phylum_endo_2023_Plot2_M.txt\",sep=\"\\t\", row.names = F)\n```\n:::\n\n\nIn this work, we analyzed exhaustively the results in Excel. Pay attention to the column entitled \"diff_abbn\", which shows the phyla that were differentially abundant.\n\n## 8.2 Genus\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a) RHIZOSPHERE\nANCOM_genus_rizo=ancomloop(input_object_phyloseq = rizo, grouping = \"Fusion\", \n                            ancom.options = list(global=FALSE, struc_zero=TRUE, n_cl=8),out.unclassified = TRUE, tax.level=\"Genus\")\n\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_rizo[[1]]),ANCOM_genus_rizo[[1]]),file=\"ANCOM_Genus_Rizo_2022_Plot1_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_rizo[[2]]),ANCOM_genus_rizo[[2]]),file=\"ANCOM_Genus_Rizo_2022_Plot1_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_rizo[[3]]),ANCOM_genus_rizo[[3]]),file=\"ANCOM_Genus_Rizo_2022_Plot2_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_rizo[[4]]),ANCOM_genus_rizo[[4]]),file=\"ANCOM_Genus_Rizo_2022_Plot2_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_rizo[[5]]),ANCOM_genus_rizo[[5]]),file=\"ANCOM_Genus_Rizo_2023_Plot1_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_rizo[[6]]),ANCOM_genus_rizo[[6]]),file=\"ANCOM_Genus_Rizo_2023_Plot1_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_rizo[[7]]),ANCOM_genus_rizo[[7]]),file=\"ANCOM_Genus_Rizo_2023_Plot2_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_rizo[[8]]),ANCOM_genus_rizo[[8]]),file=\"ANCOM_Genus_Rizo_2023_Plot2_M.txt\",sep=\"\\t\", row.names = F)\n\n#b) ENDOSPHERE\nendo=subset_samples(phy_total, Compartment==\"Endosphere\")\nendo=prune_taxa(taxa_sums(endo)>0.0, endo)\n\nANCOM_genus_endo=ancomloop(input_object_phyloseq = endo, grouping = \"Fusion\", \n                            ancom.options = list(global=FALSE, struc_zero=TRUE, n_cl=8),out.unclassified = TRUE, tax.level=\"Genus\")\n\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_endo[[1]]),ANCOM_genus_endo[[1]]),file=\"ANCOM_Genus_Endo_2022_Plot1_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_endo[[2]]),ANCOM_genus_endo[[2]]),file=\"ANCOM_Genus_Endo_2022_Plot1_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_endo[[3]]),ANCOM_genus_endo[[3]]),file=\"ANCOM_Genus_Endo_2022_Plot2_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_endo[[4]]),ANCOM_genus_endo[[4]]),file=\"ANCOM_Genus_Endo_2022_Plot2_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_endo[[5]]),ANCOM_genus_endo[[5]]),file=\"ANCOM_Genus_Endo_2023_Plot1_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_endo[[6]]),ANCOM_genus_endo[[6]]),file=\"ANCOM_Genus_Endo_2023_Plot1_M.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_endo[[7]]),ANCOM_genus_endo[[7]]),file=\"ANCOM_Genus_Endo_2023_Plot2_I.txt\",sep=\"\\t\", row.names = F)\nwrite.table(data.frame(\"_\"=rownames(ANCOM_genus_endo[[8]]),ANCOM_genus_endo[[8]]),file=\"ANCOM_Genus_Endo_2023_Plot2_M.txt\",sep=\"\\t\", row.names = F)\n```\n:::\n\n\nIn this work, we analyzed exhaustively the results in Excel. Pay attention to the column entitled \"diff_abbn\", which shows the genera that were differentially abundant.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}